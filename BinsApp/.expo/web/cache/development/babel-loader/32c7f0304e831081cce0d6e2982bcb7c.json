{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\ViewPastOrder.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Textbox from \"../components/Textbox.js\";\nimport { LoginContext } from \"../components/LoginProvider.js\";\nimport { Auth } from 'aws-amplify';\nimport { Url } from \"../src/components/url.js\";\nimport moment from \"moment\";\n\nvar ViewPastOrder = function (_Component) {\n  _inherits(ViewPastOrder, _Component);\n\n  var _super = _createSuper(ViewPastOrder);\n\n  function ViewPastOrder() {\n    var _this;\n\n    _classCallCheck(this, ViewPastOrder);\n\n    _this = _super.call(this);\n\n    _this.renderItem = function (data) {\n      return React.createElement(View, {\n        style: {\n          marginTop: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, React.createElement(Textbox, {\n        header: \"Date and Time\",\n        body: moment(data.item.date).format('MMMM DD, YYYY'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }), React.createElement(Textbox, {\n        header: \"Time\",\n        body: data.item.time,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }), React.createElement(Textbox, {\n        header: \"Address\",\n        body: data.item.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }), React.createElement(Textbox, {\n        header: \"Order Type\",\n        body: \"Pickup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }), React.createElement(Textbox, {\n        header: \"Items\",\n        body: data.item.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }));\n    };\n\n    _this.onRefresh = function () {\n      _this.setState({\n        refreshing: true\n      });\n\n      _this.fetchData();\n    };\n\n    _this.state = {\n      isLoading: true,\n      dataSource: [],\n      dateSelected: '',\n      timeSelected: '',\n      refreshing: false,\n      email: '',\n      id: ''\n    };\n    return _this;\n  }\n\n  _createClass(ViewPastOrder, [{\n    key: \"fetchData\",\n    value: function fetchData() {\n      var _this2 = this;\n\n      fetch(Url + '/renderpastorders').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        var _this2$props$route$pa, _this2$props$route$pa2;\n\n        var id = (_this2$props$route$pa = (_this2$props$route$pa2 = _this2.props.route.params) == null ? void 0 : _this2$props$route$pa2.id) != null ? _this2$props$route$pa : '';\n        var responseJson2 = responseJson.filter(function (item) {\n          return item.id == id;\n        });\n\n        _this2.setState({\n          dataSource: responseJson2,\n          isLoading: false\n        });\n      }).then(function () {\n        _this2.setState({\n          refreshing: false\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, this.state.isLoading ? React.createElement(React.Fragment, null, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }))) : React.createElement(React.Fragment, null, React.createElement(FlatList, {\n        data: this.state.dataSource,\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        extraData: this.state,\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.refreshing,\n          onRefresh: this.onRefresh,\n          tintColor: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return ViewPastOrder;\n}(Component);\n\nViewPastOrder.contextType = LoginContext;\nexport { ViewPastOrder as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136'\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/ViewPastOrder.js"],"names":["React","Component","Textbox","LoginContext","Auth","Url","moment","ViewPastOrder","renderItem","data","marginTop","item","date","format","time","address","items","onRefresh","setState","refreshing","fetchData","state","isLoading","dataSource","dateSelected","timeSelected","email","id","fetch","then","response","json","responseJson","props","route","params","responseJson2","filter","catch","error","console","log","styles","container","index","toString","contextType","StyleSheet","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, FlatList, TouchableOpacity, RefreshControl, ActivityIndicator } from 'react-native';\r\nimport Textbox from '../components/Textbox.js'\r\nimport {LoginContext} from '../components/LoginProvider.js'\r\nimport {Auth} from 'aws-amplify';\r\nimport {Url} from '../src/components/url.js';\r\nimport moment from \"moment\";\r\n\r\nexport default class ViewPastOrder extends Component {\r\n  static contextType = LoginContext;\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: true,\r\n      dataSource: [],\r\n      dateSelected: '',\r\n      timeSelected: '',\r\n      refreshing: false,\r\n      email: '',\r\n      id: ''\r\n    }\r\n  }\r\n\r\n  renderItem = data => {\r\n      return (\r\n        <View style={{marginTop: 0}}>\r\n          <Textbox header='Date and Time'\r\n                   body={moment(data.item.date).format('MMMM DD, YYYY')}/>\r\n          <Textbox header='Time'\r\n                   body={data.item.time}/>\r\n          <Textbox header='Address'\r\n                   body={data.item.address}/>\r\n          <Textbox header='Order Type'\r\n                   body='Pickup'/>\r\n          <Textbox header='Items'\r\n                   body={data.item.items}/>\r\n        </View>\r\n      )\r\n    }\r\n\r\n  onRefresh = () => {\r\n    this.setState({refreshing: true});\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData(){\r\n    fetch(Url+'/renderpastorders')\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n      const id = this.props.route.params?.id??'';\r\n      const responseJson2 = responseJson.filter(function(item){\r\n        return item.id == id\r\n      });\r\n      this.setState({dataSource: responseJson2, isLoading: false});\r\n    })\r\n    .then(() => {\r\n     this.setState({refreshing: false});\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n      {this.state.isLoading ? (\r\n        <>\r\n          <View>\r\n            <ActivityIndicator />\r\n          </View>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <FlatList\r\n            data={this.state.dataSource}\r\n            renderItem={this.renderItem}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            extraData={this.state}\r\n            refreshControl={\r\n              <RefreshControl\r\n                refreshing={this.state.refreshing}\r\n                onRefresh={this.onRefresh}\r\n                tintColor = 'white'  />\r\n            }\r\n          />\r\n          </>\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#261136',\r\n  }\r\n  });\r\n"]},"metadata":{},"sourceType":"module"}