{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\StorageInventory.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LoginContext } from \"../components/LoginProvider.js\";\nimport { Auth } from 'aws-amplify';\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport Item from \"../components/Item.js\";\nimport Textbox from \"../components/Textbox.js\";\nimport LongButton from \"../components/LongButton.js\";\nimport { Url } from \"../src/components/url.js\";\n\nvar StorageInventory = function (_Component) {\n  _inherits(StorageInventory, _Component);\n\n  var _super = _createSuper(StorageInventory);\n\n  function StorageInventory() {\n    var _this;\n\n    _classCallCheck(this, StorageInventory);\n\n    _this = _super.call(this);\n\n    _this.selectItem = function (data) {\n      data.item.isSelect = !data.item.isSelect;\n      data.item.selectedClass = data.item.isSelect ? styles.selected : styles.button;\n\n      var index = _this.state.dataSource.findIndex(function (item) {\n        return data.item.id === item.id;\n      });\n\n      _this.state.dataSource[index] = data.item;\n\n      _this.setState({\n        dataSource: _this.state.dataSource\n      });\n    };\n\n    _this.renderItem = function (data) {\n      return React.createElement(View, {\n        style: styles.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 150,\n          height: 150\n        },\n        source: {\n          uri: data.item.photo\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          padding: 10,\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, data.item.description), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, \"ID #\", data.item.id), React.createElement(TouchableOpacity, {\n        style: (styles.button, data.item.selectedClass),\n        onPress: function onPress() {\n          _this.selectItem(data);\n\n          _this.getSelected(_this.state.dataSource);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, data.item.isSelect ? React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 38\n        }\n      }, \"Selected\") : React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 89\n        }\n      }, \"Select\")))));\n    };\n\n    _this.getSelected = function (array) {\n      var arr = array.filter(function (d) {\n        return d.isSelect;\n      });\n      var result = arr.map(function (a) {\n        return a.description;\n      });\n      var result2 = arr.map(function (a) {\n        return a.id;\n      });\n\n      _this.setState({\n        selected: result,\n        id: result2\n      });\n    };\n\n    _this.onRefresh = function () {\n      _this.setState({\n        refreshing: true\n      });\n\n      _this.fetchData();\n    };\n\n    _this.state = {\n      dataSource: [],\n      selected: [],\n      type: \"Delivery\",\n      refreshing: false,\n      filter: '',\n      id: ''\n    };\n    return _this;\n  }\n\n  _createClass(StorageInventory, [{\n    key: \"onSort\",\n    value: function onSort(val) {\n      this.setState({\n        filter: val\n      });\n\n      if (val == 'Alphabetical') {\n        this.state.dataSource.sort(function (a, b) {\n          return a.description.localeCompare(b.description);\n        });\n      } else {\n        this.state.dataSource.sort(function (a, b) {\n          return parseFloat(a.id) - parseFloat(b.id);\n        });\n      }\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData() {\n      var _this2 = this;\n\n      fetch(Url + '/render').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        responseJson = responseJson.map(function (item) {\n          item.isSelect = false;\n          item.selectedClass = styles.button;\n          return item;\n        });\n        var responseJson2 = responseJson.filter(function (item) {\n          return item.isInStorage == 'Yes' && item.owner == Auth.user.attributes.email;\n        });\n\n        _this2.setState({\n          dataSource: responseJson2\n        });\n\n        _this2.setState({\n          count: responseJson2.length\n        });\n\n        if (_this2.state.filter == 'Alphabetical') {\n          _this2.state.dataSource.sort(function (a, b) {\n            return a.description.localeCompare(b.description);\n          });\n        }\n      }).then(function () {\n        _this2.setState({\n          refreshing: false\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getMax\",\n    value: function getMax() {\n      var _this3 = this;\n\n      Auth.currentUserInfo().then(function (userInfo) {\n        var _userInfo$attributes = userInfo.attributes,\n            attributes = _userInfo$attributes === void 0 ? {} : _userInfo$attributes;\n\n        if (attributes['custom:size'] == '2x2') {\n          _this3.setState({\n            max: '/20'\n          });\n        } else if (attributes['custom:size'] == '2x4') {\n          _this3.setState({\n            max: '/50'\n          });\n        } else if (attributes['custom:size'] == '5x5') {\n          _this3.setState({\n            max: '/75'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n      this.getMax();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, React.createElement(DropDownPicker, {\n        items: [{\n          label: 'Date Added (Newest)',\n          value: 'Newest'\n        }, {\n          label: 'A -> Z',\n          value: 'Alphabetical'\n        }],\n        placeholder: \"Sort By\",\n        arrowSize: 10,\n        itemStyle: {\n          justifyContent: 'flex-start'\n        },\n        containerStyle: {\n          marginLeft: 15,\n          marginBottom: 5,\n          height: 35,\n          width: 110\n        },\n        onChangeItem: function onChangeItem(item) {\n          _this4.onSort(item.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }), React.createElement(FlatList, {\n        numColumns: 2,\n        data: this.state.dataSource,\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        extraData: this.state,\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.refreshing,\n          onRefresh: this.onRefresh,\n          tintColor: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }), React.createElement(LongButton, {\n        title: \"DELIVER SELECTED ITEMS TO ME\",\n        onPress: function onPress() {\n          _this4.state.selected.length == 0 ? Alert.alert('Please Select Items') : _this4.props.navigation.navigate('ScheduleAppointmentScreen', {\n            selected: _this4.state.selected,\n            type: _this4.state.type,\n            id: _this4.state.id\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return StorageInventory;\n}(Component);\n\nStorageInventory.contextType = LoginContext;\nexport { StorageInventory as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 25,\n    backgroundColor: '#261136'\n  },\n  sectionHeader: {\n    color: '#AAB5E0',\n    fontSize: 25,\n    marginBottom: 25,\n    marginLeft: 15\n  },\n  menuFilter: {\n    color: 'white',\n    fontSize: 10,\n    marginLeft: 15\n  },\n  item: {\n    margin: 15,\n    backgroundColor: 'white',\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 5,\n    overflow: \"hidden\"\n  },\n  button: {\n    backgroundColor: '#7B1FA2',\n    paddingLeft: 2,\n    paddingRight: 2,\n    borderRadius: 3\n  },\n  selected: {\n    backgroundColor: 'green',\n    paddingLeft: 2,\n    paddingRight: 2,\n    borderRadius: 3\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/StorageInventory.js"],"names":["React","Component","LoginContext","Auth","DropDownPicker","Item","Textbox","LongButton","Url","StorageInventory","selectItem","data","item","isSelect","selectedClass","styles","selected","button","index","state","dataSource","findIndex","id","setState","renderItem","width","height","uri","photo","padding","flexDirection","fontWeight","description","justifyContent","marginTop","getSelected","color","array","arr","filter","d","result","map","a","result2","onRefresh","refreshing","fetchData","type","val","sort","b","localeCompare","parseFloat","fetch","then","response","json","responseJson","responseJson2","isInStorage","owner","user","attributes","email","count","length","catch","error","console","log","currentUserInfo","userInfo","max","getMax","container","label","value","marginLeft","marginBottom","onSort","toString","Alert","alert","props","navigation","navigate","contextType","StyleSheet","create","flex","backgroundColor","sectionHeader","fontSize","menuFilter","margin","borderColor","borderWidth","borderRadius","overflow","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ScrollView, View, Text, Button, TouchableOpacity, FlatList, StyleSheet, Image, RefreshControl, Alert } from 'react-native';\r\nimport {LoginContext} from '../components/LoginProvider.js'\r\nimport {Auth} from 'aws-amplify';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\n\r\nimport Item from '../components/Item.js'\r\nimport Textbox from '../components/Textbox.js'\r\nimport LongButton from '../components/LongButton.js'\r\nimport {Url} from '../src/components/url.js';\r\n\r\nexport default class StorageInventory extends Component {\r\n  static contextType = LoginContext;\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dataSource: [],\r\n      selected: [],\r\n      type: \"Delivery\",\r\n      refreshing: false,\r\n      filter: '',\r\n      id: '',\r\n    }\r\n  }\r\n\r\n  selectItem = data => {\r\n    data.item.isSelect = !data.item.isSelect;\r\n    data.item.selectedClass = data.item.isSelect\r\n     ? styles.selected: styles.button;\r\n\r\n  const index = this.state.dataSource.findIndex(\r\n     item => data.item.id === item.id\r\n  );\r\n  this.state.dataSource[index] = data.item;\r\n   this.setState({\r\n     dataSource: this.state.dataSource\r\n   });\r\n  };\r\n\r\n  renderItem = data => {\r\n      return (\r\n        <View style={styles.item}>\r\n          <Image style={{width: 150, height: 150}}\r\n                 source={{uri: data.item.photo}}/>\r\n          <View style={{padding: 10, flexDirection: 'column'}}>\r\n            <Text style={{fontWeight: 'bold'}}>{data.item.description}</Text>\r\n            <View style = {{flexDirection: 'row', justifyContent: 'space-between', marginTop: 5}}>\r\n              <Text>ID #{data.item.id}</Text>\r\n              <TouchableOpacity style = {styles.button, data.item.selectedClass}\r\n                                onPress={() => {this.selectItem(data); this.getSelected(this.state.dataSource);}}>\r\n              {data.item.isSelect ? (<Text style={{color:'white'}}>Selected</Text> ) : (<Text style={{color:'white'}}>Select</Text> )}\r\n              </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n    getSelected = array => {\r\n      const arr = array.filter(d => d.isSelect)\r\n      const result = arr.map(a => a.description)\r\n      const result2 = arr.map(a => a.id)\r\n      this.setState({selected: result, id: result2})\r\n    }\r\n\r\n  onRefresh = () => {\r\n     this.setState({refreshing: true});\r\n     this.fetchData();\r\n   }\r\n\r\n   onSort(val) {\r\n     this.setState({filter:val});\r\n     if (val == 'Alphabetical') {\r\n     this.state.dataSource.sort((a, b) => a.description.localeCompare(b.description));\r\n     } else {\r\n       this.state.dataSource.sort((a, b) => parseFloat(a.id) - parseFloat(b.id));\r\n     }\r\n   }\r\n\r\n  fetchData() {\r\n    fetch(Url+'/render')\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n      responseJson = responseJson.map(item => {\r\n        item.isSelect = false;\r\n        item.selectedClass = styles.button;\r\n        return item;\r\n      });\r\n      const responseJson2 = responseJson.filter(function(item){\r\n        return item.isInStorage == 'Yes' && item.owner == Auth.user.attributes.email\r\n      });\r\n      this.setState({dataSource: responseJson2});\r\n      this.setState({count: responseJson2.length});\r\n      if (this.state.filter == 'Alphabetical') {\r\n      this.state.dataSource.sort((a, b) => a.description.localeCompare(b.description));\r\n      }\r\n    })\r\n    .then(() => {\r\n     this.setState({refreshing: false});\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  getMax(){\r\n    Auth.currentUserInfo().then((userInfo) => {\r\n      const { attributes = {} } = userInfo;\r\n      if (attributes['custom:size']=='2x2'){\r\n        this.setState({max:'/20'});\r\n      } else if (attributes['custom:size']=='2x4'){\r\n        this.setState({max:'/50'});\r\n      } else if (attributes['custom:size']=='5x5'){\r\n        this.setState({max:'/75'});\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n    this.getMax();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <View style={styles.container}>\r\n            <DropDownPicker\r\n              items={[\r\n                    {label: 'Date Added (Newest)', value: 'Newest'},\r\n                    {label: 'A -> Z', value: 'Alphabetical'}\r\n              ]}\r\n              placeholder={\"Sort By\"}\r\n              arrowSize={10}\r\n              itemStyle={{justifyContent: 'flex-start'}}\r\n              containerStyle={{marginLeft: 15, marginBottom: 5, height: 35, width: 110}}\r\n              onChangeItem={item => {this.onSort(item.value)}}\r\n            />\r\n            <FlatList\r\n              numColumns={2}\r\n              data={this.state.dataSource}\r\n              renderItem={this.renderItem}\r\n              keyExtractor={(item, index) => index.toString()}\r\n              extraData={this.state}\r\n              refreshControl={\r\n                <RefreshControl\r\n                   refreshing={this.state.refreshing}\r\n                    onRefresh={this.onRefresh}\r\n                    tintColor = 'white'\r\n                />\r\n              }\r\n            />\r\n            <LongButton title =\"DELIVER SELECTED ITEMS TO ME\"\r\n                      onPress={() => {\r\n                        this.state.selected.length == 0 ? Alert.alert('Please Select Items') :\r\n                        this.props.navigation.navigate('ScheduleAppointmentScreen', {selected: this.state.selected, type: this.state.type, id: this.state.id})}}/>\r\n        </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 25,\r\n    backgroundColor: '#261136',\r\n  },\r\n  sectionHeader: {\r\n    color: '#AAB5E0',\r\n    fontSize: 25,\r\n    marginBottom: 25,\r\n    marginLeft: 15\r\n  },\r\n  menuFilter: {\r\n    color: 'white',\r\n    fontSize: 10,\r\n    marginLeft: 15,\r\n  },\r\n  item: {\r\n    margin: 15,\r\n    backgroundColor: 'white',\r\n    borderColor: 'black',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    overflow: \"hidden\",\r\n  },\r\n  button: {\r\n    backgroundColor: '#7B1FA2',\r\n    paddingLeft: 2,\r\n    paddingRight: 2,\r\n    borderRadius: 3,\r\n  },\r\n  selected: {\r\n    backgroundColor: 'green',\r\n    paddingLeft: 2,\r\n    paddingRight: 2,\r\n    borderRadius: 3,\r\n  },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}