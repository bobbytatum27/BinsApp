{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\EditBilling.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FormInputHandler from \"../components/FormInputHandler.js\";\nimport LongButton from \"../components/LongButton.js\";\nimport { LoginContext } from \"../components/LoginProvider.js\";\nimport { Auth } from 'aws-amplify';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Url } from \"../src/components/url.js\";\n\nvar EditBilling = function (_React$Component) {\n  _inherits(EditBilling, _React$Component);\n\n  var _super = _createSuper(EditBilling);\n\n  function EditBilling(props) {\n    var _this;\n\n    _classCallCheck(this, EditBilling);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      address: '',\n      specialInstructions: '',\n      nameOnCard: '',\n      creditCardNum: '',\n      expirationDate: '',\n      securityCode: '',\n      selectedButton: ''\n    };\n    return _this;\n  }\n\n  _createClass(EditBilling, [{\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      fetch(Url + '/modifycustomers', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Auth.currentUserInfo().then(function (userInfo) {\n        var _userInfo$attributes = userInfo.attributes,\n            attributes = _userInfo$attributes === void 0 ? {} : _userInfo$attributes;\n\n        _this2.setState({\n          name: attributes['name']\n        });\n\n        _this2.setState({\n          email: attributes['email']\n        });\n\n        _this2.setState({\n          phone: attributes['phone_number']\n        });\n\n        _this2.setState({\n          address: attributes['address']\n        });\n\n        _this2.setState({\n          specialInstructions: attributes['custom:specialInstructions']\n        });\n\n        _this2.setState({\n          selectedButton: attributes['custom:size']\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.sectionHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, \"To update your billing info, please email us at:\"), React.createElement(Text, {\n        style: styles.sectionHeaderWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, \"contact@bins-storage.com\"));\n    }\n  }]);\n\n  return EditBilling;\n}(React.Component);\n\nEditBilling.contextType = LoginContext;\nexport { EditBilling as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 25,\n    backgroundColor: '#261136'\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15\n  },\n  descriptionText: {\n    marginBottom: -10,\n    paddingLeft: 15,\n    color: 'white'\n  },\n  sectionHeader: {\n    color: '#AAB5E0',\n    fontSize: 15,\n    marginLeft: 15\n  },\n  sectionHeaderWhite: {\n    color: '#FFF',\n    fontSize: 15,\n    marginLeft: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/EditBilling.js"],"names":["React","FormInputHandler","LongButton","LoginContext","Auth","Ionicons","Url","EditBilling","props","state","name","email","phone","address","specialInstructions","nameOnCard","creditCardNum","expirationDate","securityCode","selectedButton","fetch","method","headers","Accept","body","JSON","stringify","currentUserInfo","then","userInfo","attributes","setState","styles","container","sectionHeader","sectionHeaderWhite","Component","contextType","StyleSheet","create","flex","padding","backgroundColor","userInfoText","borderColor","borderWidth","textAlign","color","margin","descriptionText","marginBottom","paddingLeft","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Button, Alert, ScrollView } from 'react-native';\r\nimport FormInputHandler from '../components/FormInputHandler.js'\r\nimport LongButton from '../components/LongButton.js'\r\nimport { LoginContext } from '../components/LoginProvider.js';\r\nimport {Auth} from 'aws-amplify';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport {Url} from '../src/components/url.js';\r\n\r\nexport default class EditBilling extends React.Component {\r\n  static contextType = LoginContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      address: '',\r\n      specialInstructions: '',\r\n      nameOnCard: '',\r\n      creditCardNum: '',\r\n      expirationDate: '',\r\n      securityCode: '',\r\n      selectedButton: '',\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    fetch(Url+'/modifycustomers',{\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n    },\r\n      body: JSON.stringify(this.state)\r\n  })}\r\n\r\n  /*async updateUser() {\r\n    let user = await Auth.currentAuthenticatedUser();\r\n\r\n    let result = await Auth.updateUserAttributes(user, {\r\n      'custom:size': this.state.selectedButton\r\n    });\r\n  }*/\r\n\r\n  componentDidMount(){\r\n    Auth.currentUserInfo().then((userInfo) => {\r\n      const { attributes = {} } = userInfo;\r\n      this.setState({name:attributes['name']});\r\n      this.setState({email:attributes['email']});\r\n      this.setState({phone:attributes['phone_number']});\r\n      this.setState({address:attributes['address']});\r\n      this.setState({specialInstructions:attributes['custom:specialInstructions']});\r\n      this.setState({selectedButton:attributes['custom:size']});\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.sectionHeader}>To update your billing info, please email us at:</Text>\r\n        <Text style={styles.sectionHeaderWhite}>contact@bins-storage.com</Text>\r\n      </View>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 25,\r\n    backgroundColor: '#261136',\r\n  },\r\n  userInfoText: {\r\n    borderColor: '#4826A0',\r\n    borderWidth: 1,\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    margin: 15,\r\n    padding: 15,\r\n  },\r\n  descriptionText:{\r\n    marginBottom: -10,\r\n    paddingLeft: 15,\r\n    color: 'white',\r\n  },\r\n  sectionHeader: {\r\n    color: '#AAB5E0',\r\n    fontSize: 15,\r\n    marginLeft: 15\r\n  },\r\n  sectionHeaderWhite: {\r\n    color: '#FFF',\r\n    fontSize: 15,\r\n    marginLeft: 15,\r\n  },\r\n});\r\n\r\n/*\r\n<View style={{flex: 5}}>\r\n  <Text style={styles.descriptionText}>Name on Card</Text>\r\n  <FormInputHandler\r\n    defaultText='Name on Card'\r\n    defaultTextColor='#8B8B8B'\r\n    style={styles.userInfoText}\r\n    onChangeText={(text) => this.setState({nameOnCard: text})}\r\n  />\r\n  <Text style={styles.descriptionText}>Credit Card</Text>\r\n  <FormInputHandler\r\n    defaultText='xxxx xxxx xxxx xxxx'\r\n    defaultTextColor='#8B8B8B'\r\n    style={styles.userInfoText}\r\n    onChangeText={(text) => this.setState({creditCardNum: text})}\r\n  />\r\n  <View style={{flexDirection:'row', justifyContent: 'space-between'}}>\r\n    <View style={{flex:1}}>\r\n      <Text style={styles.descriptionText}>Expiration Date</Text>\r\n      <FormInputHandler\r\n        defaultText='Expiration Date'\r\n        defaultTextColor='#8B8B8B'\r\n        style={styles.userInfoText}\r\n        onChangeText={(text) => this.setState({expirationDate: text})}\r\n      />\r\n    </View>\r\n    <View style={{flex:1}}>\r\n      <Text style={styles.descriptionText}>Security Code</Text>\r\n      <FormInputHandler\r\n        defaultText='Security Code'\r\n        defaultTextColor='#8B8B8B'\r\n        style={styles.userInfoText}\r\n        onChangeText={(text) => this.setState({securityCode: text})}\r\n      />\r\n    </View>\r\n  </View>\r\n  <Text style = {{marginLeft: 15, marginTop: 10, marginRight: 15, color: 'gray'}}>Next Payment: </Text>\r\n</View>\r\n<View style={{flex:1, justifyContent: 'flex-end'}}>\r\n  <LongButton\r\n    title=\"SAVE INFO\"\r\n    onPress={()=>{this.onSubmit(); Alert.alert(\"Your Information Has Been Saved\")}}\r\n  />\r\n</View>\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}