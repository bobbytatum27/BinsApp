{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\components\\\\InputValidator.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar InputValidator = function (_React$Component) {\n  _inherits(InputValidator, _React$Component);\n\n  var _super = _createSuper(InputValidator);\n\n  function InputValidator(props) {\n    var _this;\n\n    _classCallCheck(this, InputValidator);\n\n    _this = _super.call(this, props);\n\n    _this.invalidInput = function () {\n      return _this.setState({\n        validInput: false,\n        validUI: false\n      });\n    };\n\n    _this.validInput = function () {\n      return _this.setState({\n        validInput: true,\n        validUI: true\n      });\n    };\n\n    _this.state = {\n      validInput: false,\n      validUI: true\n    };\n    return _this;\n  }\n\n  _createClass(InputValidator, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.descriptionText), {}, {\n          color: this.state.validUI ? 'white' : 'red'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, this.props.titleText, \" \", this.state.validUI ? '' : ' - ' + this.props.errorMessage), React.createElement(TextInput, {\n        placeholder: this.props.defaultText,\n        placeholderTextColor: this.props.defaultTextColor,\n        onChangeText: this.props.onChangeText,\n        style: this.props.style,\n        keyboardType: this.props.keyboardType,\n        secureTextEntry: this.props.secureTextEntry,\n        keyboardType: this.props.keyboardType,\n        autoCapitalize: this.props.autoCapitalize,\n        returnKeyType: this.props.returnKeyType,\n        onBlur: function onBlur() {\n          _this2.props.checkInput() ? _this2.validInput() : _this2.invalidInput();\n        },\n        onEndEditing: function onEndEditing() {\n          _this2.props.checkInput() ? _this2.validInput() : _this2.invalidInput();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return InputValidator;\n}(React.Component);\n\nexport { InputValidator as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textInput: {\n    height: 100,\n    borderRadius: 2,\n    borderWidth: 2,\n    borderColor: '#000000',\n    color: '#000000',\n    backgroundColor: '#FFFFFF',\n    padding: 2,\n    fontSize: 14,\n    margin: 10\n  },\n  descriptionText: {\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/components/InputValidator.js"],"names":["React","InputValidator","props","invalidInput","setState","validInput","validUI","state","styles","descriptionText","color","titleText","errorMessage","defaultText","defaultTextColor","onChangeText","style","keyboardType","secureTextEntry","autoCapitalize","returnKeyType","checkInput","Component","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","textInput","height","borderRadius","borderWidth","borderColor","padding","fontSize","margin","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TextInput} from 'react-native';\n\nexport default class InputValidator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        validInput: false,\n        validUI: true,\n    };\n  }\n\n  invalidInput = () => this.setState({validInput: false, validUI: false})\n  validInput = () => this.setState({validInput: true, validUI: true})\n\n  render() {\n    return (\n        <View>\n            <Text style={{...styles.descriptionText, color: this.state.validUI ? 'white' : 'red'}}>{this.props.titleText} {this.state.validUI ? '' : ' - ' + this.props.errorMessage}</Text>\n            <TextInput\n                placeholder={this.props.defaultText}\n                placeholderTextColor={this.props.defaultTextColor}\n                onChangeText={this.props.onChangeText}\n                style={this.props.style}\n                keyboardType={this.props.keyboardType}\n                secureTextEntry={this.props.secureTextEntry}\n                keyboardType={this.props.keyboardType}\n                autoCapitalize={this.props.autoCapitalize}\n                returnKeyType={this.props.returnKeyType}\n                onBlur={() => {\n                    this.props.checkInput() ? this.validInput() : this.invalidInput()\n                }}\n                onEndEditing={() => {\n                    this.props.checkInput() ? this.validInput() : this.invalidInput()\n                }}\n            />\n        </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  textInput: {\n    height: 100, // For dimensions\n    borderRadius: 2, // How round is the text box\n    borderWidth: 2, // Set border width.\n    borderColor: '#000000', // Set border Hex Color Code Here\n    color: '#000000', // Setting up Text Font Color.\n    backgroundColor : '#FFFFFF', // Setting Up Background Color of Text component.\n    padding : 2, // Adding padding on Text component.\n    fontSize: 14,\n    // textAlign: 'center',\n    margin: 10,\n  },\n  descriptionText:{\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}