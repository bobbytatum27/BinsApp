{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\components\\\\FormInputHandler.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar FormInputHandler = function (_React$Component) {\n  _inherits(FormInputHandler, _React$Component);\n\n  var _super = _createSuper(FormInputHandler);\n\n  function FormInputHandler(props) {\n    var _this;\n\n    _classCallCheck(this, FormInputHandler);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      text: 'Enter name here'\n    };\n    return _this;\n  }\n\n  _createClass(FormInputHandler, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TextInput, {\n        placeholder: this.props.defaultText,\n        placeholderTextColor: this.props.defaultTextColor,\n        onChangeText: this.props.onChangeText,\n        style: this.props.style,\n        keyboardType: this.props.keyboardType,\n        secureTextEntry: this.props.secureTextEntry,\n        defaultValue: this.props.defaultValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return FormInputHandler;\n}(React.Component);\n\nexport { FormInputHandler as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textInput: {\n    height: 100,\n    borderRadius: 2,\n    borderWidth: 2,\n    borderColor: '#000000',\n    color: '#000000',\n    backgroundColor: '#FFFFFF',\n    padding: 2,\n    fontSize: 14,\n    margin: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/components/FormInputHandler.js"],"names":["React","FormInputHandler","props","state","text","defaultText","defaultTextColor","onChangeText","style","keyboardType","secureTextEntry","defaultValue","Component","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","textInput","height","borderRadius","borderWidth","borderColor","color","padding","fontSize","margin"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;IAGqBC,gB;;;;;AACnB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AAFiB;AAIlB;;;;6BAEQ;AACP,aACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWG,WAD1B;AAEE,QAAA,oBAAoB,EAAE,KAAKH,KAAL,CAAWI,gBAFnC;AAGE,QAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWK,YAH3B;AAIE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,KAJpB;AAKE,QAAA,YAAY,EAAE,KAAKN,KAAL,CAAWO,YAL3B;AAME,QAAA,eAAe,EAAE,KAAKP,KAAL,CAAWQ,eAN9B;AAOE,QAAA,YAAY,EAAE,KAAKR,KAAL,CAAWS,YAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;;;;EAnB2CX,KAAK,CAACY,S;;SAA/BX,gB;AAsBrB,IAAMY,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,GADC;AAETC,IAAAA,YAAY,EAAE,CAFL;AAGTC,IAAAA,WAAW,EAAE,CAHJ;AAITC,IAAAA,WAAW,EAAE,SAJJ;AAKTC,IAAAA,KAAK,EAAE,SALE;AAMTR,IAAAA,eAAe,EAAG,SANT;AAOTS,IAAAA,OAAO,EAAG,CAPD;AAQTC,IAAAA,QAAQ,EAAE,EARD;AAUTC,IAAAA,MAAM,EAAE;AAVC;AAPoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TextInput } from 'react-native';\n\nexport default class FormInputHandler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {text: 'Enter name here'};\n    //prob gonna make that this.props.question so initial text is question\n  }\n\n  render() {\n    return (\n      <TextInput\n        placeholder={this.props.defaultText}\n        placeholderTextColor={this.props.defaultTextColor}\n        onChangeText={this.props.onChangeText}\n        style={this.props.style}\n        keyboardType={this.props.keyboardType}\n        secureTextEntry={this.props.secureTextEntry}\n        defaultValue={this.props.defaultValue}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  textInput: {\n    height: 100, // For dimensions\n    borderRadius: 2, // How round is the text box\n    borderWidth: 2, // Set border width.\n    borderColor: '#000000', // Set border Hex Color Code Here\n    color: '#000000', // Setting up Text Font Color.\n    backgroundColor : '#FFFFFF', // Setting Up Background Color of Text component.\n    padding : 2, // Adding padding on Text component.\n    fontSize: 14,\n    // textAlign: 'center',\n    margin: 10,\n  },\n});\n\n/*\n<View style={{ paddingTop: 30 }}>\n        <TextInput\n          style={this.props.style}\n          placeholder={this.props.title}\n          placeholderTextColor={this.props.titleColor}\n          multiline={this.props.multiline}\n          autoCapitalize={this.props.autocapital}\n          underlineColorAndroid={this.props.underlineColor}\n          onChangeText={this.props.onChangeText}\n          // value={this.state.finalText} // THIS LINE DIDN'T LET THE USER CHANGE THE TEXT\n        />\n</View>\n*/\n"]},"metadata":{},"sourceType":"module"}