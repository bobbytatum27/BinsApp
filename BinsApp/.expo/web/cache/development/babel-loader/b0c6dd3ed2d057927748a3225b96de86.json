{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\BillingInfo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FormInputHandler from \"../components/FormInputHandler.js\";\nimport Textbox from \"../components/Textbox.js\";\nimport LongButton from \"../components/LongButton.js\";\nimport { CreditCardInput } from 'react-native-credit-card-input';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Auth } from 'aws-amplify';\nimport { LoginContext } from \"../components/LoginProvider.js\";\n\nvar BillingInfo = function (_React$Component) {\n  _inherits(BillingInfo, _React$Component);\n\n  var _super = _createSuper(BillingInfo);\n\n  function BillingInfo(props) {\n    var _this;\n\n    _classCallCheck(this, BillingInfo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      dateSelected: '',\n      timeSelected: '',\n      nameOnCard: '',\n      creditCardNum: '',\n      expirationDate: '',\n      securityCode: ''\n    };\n    return _this;\n  }\n\n  _createClass(BillingInfo, [{\n    key: \"signUp\",\n    value: function signUp() {\n      var _this2 = this;\n\n      Auth.signUp({\n        username: this.state.email,\n        password: this.state.password,\n        attributes: {\n          name: this.state.name,\n          phone_number: this.state.phone,\n          address: this.state.addressLine1 + \" \" + this.state.addressLine2 + \" \" + this.state.city + \", \" + this.state.state + \" \" + this.state.zip\n        }\n      }).then(function () {\n        console.log('successful sign in!');\n\n        _this2.context.login();\n      }).catch(function (err) {\n        return console.log('error signing up!: ', err);\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      fetch('http://192.168.1.247:5000/customers', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$route$par, _this$props$route$par2, _this$props$route$par3, _this$props$route$par4;\n\n      var dateSelected = (_this$props$route$par = (_this$props$route$par2 = this.props.route.params) == null ? void 0 : _this$props$route$par2.dateSelected) != null ? _this$props$route$par : '';\n      var timeSelected = (_this$props$route$par3 = (_this$props$route$par4 = this.props.route.params) == null ? void 0 : _this$props$route$par4.timeSelected) != null ? _this$props$route$par3 : '';\n      this.setState({\n        dateSelected: dateSelected,\n        timeSelected: timeSelected\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"Review\")), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, React.createElement(CreditCardInput, {\n        onChange: this._onChange,\n        labelStyle: styles.creditCardLabels,\n        inputContainerStyle: styles.creditCardInputView,\n        inputStyle: {\n          color: 'white'\n        },\n        requiresName: true,\n        autoFocus: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, \"Review\")), React.createElement(Textbox, {\n        header: \"Date and Time\",\n        body: Object.keys(this.state.dateSelected),\n        body2: this.state.timeSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }), React.createElement(Textbox, {\n        header: \"Address\",\n        body: this.state.addressLine1,\n        body2: this.state.city + \", \" + this.state.state + \" \" + this.state.zip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }), React.createElement(Textbox, {\n        header: \"Unit\",\n        body: \"\",\n        body2: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          marginTop: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(LongButton, {\n        title: \"CONFIRM PICKUP\",\n        onPress: function onPress() {\n          var address = _this3.state.addressLine1 + ' ' + _this3.state.addressLine2 + ' ' + _this3.state.city + ' ' + _this3.state.state + ' ' + _this3.state.zip;\n\n          _this3.context.completeSignup(_this3.props.route.params.specialInstructions).catch(function (err) {\n            return console.log('error signing up!' + err);\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return BillingInfo;\n}(React.Component);\n\nBillingInfo.contextType = LoginContext;\nexport { BillingInfo as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136',\n    padding: 25\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15\n  },\n  descriptionText: {\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white'\n  },\n  questionText: {\n    fontSize: 20,\n    paddingTop: 15\n  },\n  header: {\n    color: '#AAB5E0',\n    fontSize: 25,\n    margin: 15,\n    justifyContent: 'center'\n  },\n  creditCardLabels: {\n    color: 'white'\n  },\n  creditCardInputView: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    margin: 15,\n    paddingLeft: 5,\n    paddingTop: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/BillingInfo.js"],"names":["React","FormInputHandler","Textbox","LongButton","CreditCardInput","ScrollView","Auth","LoginContext","BillingInfo","props","state","dateSelected","timeSelected","nameOnCard","creditCardNum","expirationDate","securityCode","signUp","username","email","password","attributes","name","phone_number","phone","address","addressLine1","addressLine2","city","zip","then","console","log","context","login","catch","err","fetch","method","headers","Accept","body","JSON","stringify","route","params","setState","styles","container","alignItems","header","_onChange","creditCardLabels","creditCardInputView","color","Object","keys","marginTop","completeSignup","specialInstructions","Component","contextType","StyleSheet","create","flex","backgroundColor","padding","userInfoText","borderColor","borderWidth","textAlign","margin","descriptionText","marginBottom","marginLeft","questionText","fontSize","paddingTop","justifyContent","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, Alert } from 'react-native';\nimport FormInputHandler from '../components/FormInputHandler.js'\nimport Textbox from '../components/Textbox.js'\nimport LongButton from '../components/LongButton.js'\nimport { CreditCardInput } from 'react-native-credit-card-input'\nimport { ScrollView } from 'react-native-gesture-handler';\nimport {Auth} from 'aws-amplify';\n\nimport { LoginContext } from '../components/LoginProvider.js';\n\nexport default class BillingInfo extends React.Component {\n  static contextType = LoginContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateSelected: '',\n      timeSelected: '',\n      nameOnCard: '',\n      creditCardNum: '',\n      expirationDate: '',\n      securityCode: '',\n    }\n  }\n\n  // this func is not in use in this file anymore\n  signUp() {\n      Auth.signUp({\n        username: this.state.email,\n        password: this.state.password,\n        attributes: {\n          name: this.state.name,\n          phone_number: this.state.phone,\n          address: this.state.addressLine1+ \" \" + this.state.addressLine2 + \" \" + this.state.city + \", \" + this.state.state + \" \" + this.state.zip,\n         },\n      })\n      .then(() => {\n        console.log('successful sign in!');\n        this.context.login();})\n          .catch(err => console.log('error signing up!: ', err));\n      }\n\n  onSubmit() {\n    fetch('http://192.168.1.247:5000/customers',{\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n    },\n      body: JSON.stringify(this.state)\n  })}\n\n  componentDidMount(){\n      const dateSelected = this.props.route.params?.dateSelected??'';\n      const timeSelected = this.props.route.params?.timeSelected??'';\n      this.setState({dateSelected: dateSelected, timeSelected: timeSelected});\n    }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style = {{alignItems: 'center'}}>\n          <Text style = {styles.header}>Review</Text>\n        </View>\n        <ScrollView>\n        <CreditCardInput\n          onChange={this._onChange}\n          labelStyle={styles.creditCardLabels}\n          inputContainerStyle={styles.creditCardInputView}\n          inputStyle={{color: 'white'}}\n          requiresName={true}\n          autoFocus={false}\n        />\n        <View style = {{alignItems: 'center'}}>\n          <Text style = {styles.header}>Review</Text>\n        </View>\n        <Textbox header='Date and Time'\n                 body={Object.keys(this.state.dateSelected)}\n                 body2={this.state.timeSelected}/>\n        <Textbox header='Address'\n                 body={this.state.addressLine1}\n                 body2={this.state.city + \", \" + this.state.state + \" \" + this.state.zip}/>\n        <Textbox header='Unit'\n                 body=''\n                 body2=''/>\n        <View style = {{marginTop: 15}}>\n          <LongButton\n            title=\"CONFIRM PICKUP\"\n            onPress={()=>{\n              // initial signup in user info, this just updates user in user pool and changes isLoggedIn\n              const address =\n                this.state.addressLine1 + ' ' + this.state.addressLine2 + ' ' +\n                this.state.city + ' ' + this.state.state + ' ' + this.state.zip;\n              this.context.completeSignup(this.props.route.params.specialInstructions)\n              .catch((err)=>console.log('error signing up!' + err))\n              // this.onSubmit(); to be nested inside the .then() of signup\n            }}\n          />\n        </View>\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136',\n    padding: 25\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15,\n  },\n  descriptionText:{\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white',\n  },\n  questionText: {\n    fontSize: 20,\n    paddingTop: 15\n  },\n  header: {\n    color: '#AAB5E0',\n    fontSize: 25,\n    margin: 15,\n    justifyContent: 'center',\n  },\n  creditCardLabels: {\n    color: 'white',\n  },\n  creditCardInputView: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    margin: 15,\n    paddingLeft: 5,\n    paddingTop: 5\n  }\n\n});\n"]},"metadata":{},"sourceType":"module"}