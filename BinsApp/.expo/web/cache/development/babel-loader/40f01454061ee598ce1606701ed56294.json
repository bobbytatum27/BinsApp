{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\InitialAppointment.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport FormInputHandler from \"../components/FormInputHandler.js\";\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nimport LongButton from \"../components/LongButton.js\";\nimport { Auth } from 'aws-amplify';\nimport moment from 'moment';\n\nvar InitialAppointment = function (_React$Component) {\n  _inherits(InitialAppointment, _React$Component);\n\n  var _super = _createSuper(InitialAppointment);\n\n  function InitialAppointment(props) {\n    var _this;\n\n    _classCallCheck(this, InitialAppointment);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      dateSelected: {},\n      timeSelected: '',\n      selectedButton: null,\n      selected: []\n    };\n    _this.selectionOnPress = _this.selectionOnPress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InitialAppointment, [{\n    key: \"selectionOnPress\",\n    value: function selectionOnPress(userType) {\n      this.setState({\n        selectedButton: userType\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$route$par, _this$props$route$par2, _this$props$route$par3, _this$props$route$par4;\n\n      Auth.signIn({\n        username: (_this$props$route$par = (_this$props$route$par2 = this.props.route.params) == null ? void 0 : _this$props$route$par2.email) != null ? _this$props$route$par : '',\n        password: (_this$props$route$par3 = (_this$props$route$par4 = this.props.route.params) == null ? void 0 : _this$props$route$par4.password) != null ? _this$props$route$par3 : ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var today = moment().format(\"YYYY-MM-DD\");\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          marginBottom: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.descriptionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, \"Please Select a Date\"), React.createElement(Calendar, {\n        style: {\n          margin: 15\n        },\n        minDate: today,\n        onDayPress: function onDayPress(day) {\n          _this2.setState({\n            dateSelected: _defineProperty({}, day.dateString, {\n              selected: true,\n              selectedColor: '#466A8F'\n            })\n          });\n        },\n        markedDates: this.state.dateSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.descriptionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"Please select a time\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          borderColor: '#d6d7da',\n          marginTop: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          margin: 5,\n          borderRadius: 10,\n          padding: 5,\n          backgroundColor: '#7B1FA2',\n          borderColor: '#FFF',\n          borderWidth: this.state.selectedButton === '9:00am' ? 2 : 0\n        },\n        onPress: function onPress() {\n          return _this2.selectionOnPress(\"9:00am\");\n        },\n        onPressIn: function onPressIn() {\n          return _this2.setState({\n            timeSelected: '9:00am'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.switchButtonsText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, \"9:00am\")), React.createElement(TouchableOpacity, {\n        style: {\n          margin: 5,\n          borderRadius: 10,\n          padding: 5,\n          backgroundColor: '#7B1FA2',\n          borderColor: '#FFF',\n          borderWidth: this.state.selectedButton === '1:00pm' ? 2 : 0\n        },\n        onPress: function onPress() {\n          return _this2.selectionOnPress(\"1:00pm\");\n        },\n        onPressIn: function onPressIn() {\n          return _this2.setState({\n            timeSelected: '1:00pm'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.switchButtonsText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"1:00pm\"))), React.createElement(LongButton, {\n        title: \"NEXT\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('BillingInfoScreen', {\n            email: _this2.props.route.params.email,\n            password: _this2.props.route.params.password,\n            address: _this2.props.route.params.address,\n            size: _this2.props.route.params.size,\n            dateSelected: Object.keys(_this2.state.dateSelected)[0],\n            timeSelected: _this2.state.timeSelected\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return InitialAppointment;\n}(React.Component);\n\nexport { InitialAppointment as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136',\n    padding: 25\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15\n  },\n  descriptionText: {\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white'\n  },\n  switchButtonsText: {\n    fontSize: 20,\n    color: '#FFF'\n  },\n  timeButton: {\n    margin: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/InitialAppointment.js"],"names":["React","FormInputHandler","Calendar","CalendarList","Agenda","LongButton","Auth","moment","InitialAppointment","props","state","dateSelected","timeSelected","selectedButton","selected","selectionOnPress","bind","userType","setState","signIn","username","route","params","email","password","today","format","styles","container","marginBottom","descriptionText","margin","day","dateString","selectedColor","flexDirection","justifyContent","borderColor","marginTop","borderRadius","padding","backgroundColor","borderWidth","switchButtonsText","navigation","navigate","address","size","Object","keys","Component","StyleSheet","create","flex","userInfoText","textAlign","color","marginLeft","fontSize","timeButton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, Alert, Image, ScrollView, TouchableOpacity, TouchableHighlight } from 'react-native';\nimport FormInputHandler from '../components/FormInputHandler.js'\nimport {Calendar, CalendarList, Agenda} from 'react-native-calendars';\nimport LongButton from '../components/LongButton.js'\nimport {Auth} from 'aws-amplify';\nimport moment from 'moment';\n\nexport default class InitialAppointment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dateSelected: {},\n      timeSelected: '',\n      selectedButton: null,\n      selected: [],\n    }\n    this.selectionOnPress = this.selectionOnPress.bind(this)\n  }\n\n  selectionOnPress(userType) {\n    this.setState({selectedButton: userType})\n  }\n\n  componentDidMount(){\n    Auth.signIn({\n        username: this.props.route.params?.email??'',\n        password: this.props.route.params?.password??'',\n    })\n  }\n\n  render() {\n\n    const today = moment().format(\"YYYY-MM-DD\");\n\n    return (\n      <View style={styles.container}>\n        <ScrollView style={{marginBottom:25}}>\n          <Text style ={styles.descriptionText}>Please Select a Date</Text>\n          <Calendar\n            style={{margin:15}}\n            minDate={today}\n            onDayPress={(day) => {this.setState({dateSelected:{[day.dateString]:{selected: true, selectedColor: '#466A8F'}}})}}\n            markedDates={this.state.dateSelected}/>\n          <Text style={styles.descriptionText}>Please select a time</Text>\n          <View style={{flexDirection: 'row', justifyContent: 'space-around', borderColor: '#d6d7da', marginTop: 25}}>\n            <TouchableOpacity\n              style = {{margin: 5, borderRadius: 10, padding: 5, backgroundColor: '#7B1FA2', borderColor: '#FFF', borderWidth: this.state.selectedButton === '9:00am' ? 2 : 0}}\n              onPress={() => this.selectionOnPress(\"9:00am\")}\n              onPressIn={() => this.setState({timeSelected: '9:00am'})}>\n            <Text style={styles.switchButtonsText}>9:00am</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style = {{margin: 5, borderRadius: 10, padding: 5, backgroundColor: '#7B1FA2', borderColor: '#FFF', borderWidth: this.state.selectedButton === '1:00pm' ? 2 : 0}}\n              onPress={() => this.selectionOnPress(\"1:00pm\")}\n              onPressIn={() => this.setState({timeSelected: '1:00pm'})}>\n            <Text style={styles.switchButtonsText}>1:00pm</Text>\n            </TouchableOpacity>\n          </View>\n          <LongButton\n            title=\"NEXT\"\n            onPress={()=>this.props.navigation.navigate('BillingInfoScreen', {email: this.props.route.params.email,\n                                                                              password: this.props.route.params.password,\n                                                                              address: this.props.route.params.address,\n                                                                              size: this.props.route.params.size,\n                                                                              dateSelected: Object.keys(this.state.dateSelected)[0],\n                                                                              timeSelected: this.state.timeSelected})}\n          />\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136',\n    padding: 25\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15,\n  },\n  descriptionText:{\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white',\n  },\n  switchButtonsText:{\n    fontSize: 20,\n    color: '#FFF'\n  },\n  timeButton:{\n    margin: 10,\n  },\n\n  });\n"]},"metadata":{},"sourceType":"module"}