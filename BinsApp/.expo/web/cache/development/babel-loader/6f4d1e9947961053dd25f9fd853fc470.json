{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\PastOrders.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { LoginContext } from \"../components/LoginProvider.js\";\nimport { Auth } from 'aws-amplify';\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport { Url } from \"../src/components/url.js\";\nimport moment from \"moment\";\n\nvar PastOrders = function (_Component) {\n  _inherits(PastOrders, _Component);\n\n  var _super = _createSuper(PastOrders);\n\n  function PastOrders() {\n    var _this;\n\n    _classCallCheck(this, PastOrders);\n\n    _this = _super.call(this);\n\n    _this.renderItem = function (data) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.orderbox,\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('ViewPastOrder', {\n            id: data.item.id\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, moment(data.item.date).format('dddd, MMMM DD, YYYY')), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, data.item.time, \" | \", data.item.type)), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, \">\"));\n    };\n\n    _this.onRefresh = function () {\n      _this.setState({\n        refreshing: true\n      });\n\n      _this.fetchData();\n    };\n\n    _this.state = {\n      isLoading: true,\n      dataSource: [],\n      dateSelected: '',\n      timeSelected: '',\n      refreshing: false,\n      email: ''\n    };\n    return _this;\n  }\n\n  _createClass(PastOrders, [{\n    key: \"fetchData\",\n    value: function fetchData() {\n      var _this2 = this;\n\n      fetch(Url + '/renderpastorders').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        var responseJson2 = responseJson.filter(function (item) {\n          return item.name == Auth.user.attributes.email;\n        });\n\n        _this2.setState({\n          dataSource: responseJson2,\n          isLoading: false\n        });\n      }).then(function () {\n        _this2.setState({\n          refreshing: false\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, this.state.isLoading ? React.createElement(React.Fragment, null, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }))) : React.createElement(React.Fragment, null, this.state.dataSource.length == 0 ? React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.textbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, \"None of Your Items Have Been Returned Yet\"))) : React.createElement(React.Fragment, null, React.createElement(FlatList, {\n        data: this.state.dataSource,\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        extraData: this.state,\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.refreshing,\n          onRefresh: this.onRefresh,\n          tintColor: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return PastOrders;\n}(Component);\n\nPastOrders.contextType = LoginContext;\nexport { PastOrders as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136'\n  },\n  orderbox: {\n    padding: 15,\n    backgroundColor: \"white\",\n    marginBottom: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: 'center'\n  },\n  textbox: {\n    flexDirection: 'column',\n    backgroundColor: '#FFF',\n    padding: 10,\n    margin: 15,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/PastOrders.js"],"names":["React","Component","LoginContext","Auth","DropDownPicker","Url","moment","PastOrders","renderItem","data","styles","orderbox","props","navigation","navigate","id","item","fontWeight","date","format","time","type","onRefresh","setState","refreshing","fetchData","state","isLoading","dataSource","dateSelected","timeSelected","email","fetch","then","response","json","responseJson","responseJson2","filter","name","user","attributes","catch","error","console","log","container","length","textbox","textAlign","index","toString","contextType","StyleSheet","create","flex","backgroundColor","padding","marginBottom","flexDirection","justifyContent","alignItems","margin","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, FlatList, TouchableOpacity, RefreshControl, ActivityIndicator } from 'react-native';\r\nimport {LoginContext} from '../components/LoginProvider.js'\r\nimport {Auth} from 'aws-amplify';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport {Url} from '../src/components/url.js';\r\nimport moment from \"moment\";\r\n\r\nexport default class PastOrders extends Component {\r\n  static contextType = LoginContext;\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: true,\r\n      dataSource: [],\r\n      dateSelected: '',\r\n      timeSelected: '',\r\n      refreshing: false,\r\n      email: '',\r\n    }\r\n  }\r\n\r\n  renderItem = data => {\r\n      return (\r\n        <TouchableOpacity style={styles.orderbox} onPress={() => this.props.navigation.navigate('ViewPastOrder', {id: data.item.id})}>\r\n          <View>\r\n            <Text style={{fontWeight:\"bold\"}}>{moment(data.item.date).format('dddd, MMMM DD, YYYY')}</Text>\r\n            <Text>{data.item.time} | {data.item.type}</Text>\r\n          </View>\r\n          <Text>></Text>\r\n        </TouchableOpacity>\r\n      )\r\n    }\r\n\r\n  onRefresh = () => {\r\n    this.setState({refreshing: true});\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData(){\r\n    fetch(Url+'/renderpastorders')\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n      const responseJson2 = responseJson.filter(function(item){\r\n        return item.name == Auth.user.attributes.email\r\n      });\r\n      this.setState({dataSource: responseJson2, isLoading: false});\r\n    })\r\n    .then(() => {\r\n     this.setState({refreshing: false});\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n      {this.state.isLoading ? (\r\n        <>\r\n          <View>\r\n            <ActivityIndicator />\r\n          </View>\r\n        </>\r\n      ) : (\r\n        <>\r\n        {this.state.dataSource.length == 0 ? (\r\n          <>\r\n          <View style = {styles.textbox}>\r\n            <Text style = {{textAlign: 'center'}}>None of Your Items Have Been Returned Yet</Text>\r\n          </View>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <FlatList\r\n            data={this.state.dataSource}\r\n            renderItem={this.renderItem}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            extraData={this.state}\r\n            refreshControl={\r\n              <RefreshControl\r\n                refreshing={this.state.refreshing}\r\n                onRefresh={this.onRefresh}\r\n                tintColor = 'white'  />\r\n            }\r\n          />\r\n          </>\r\n        )}\r\n          </>\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#261136',\r\n  },\r\n  orderbox:{\r\n    padding: 15,\r\n    backgroundColor: \"white\",\r\n    marginBottom: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: 'center'\r\n  },\r\n  textbox: {\r\n    flexDirection: 'column',\r\n    backgroundColor: '#FFF',\r\n    padding: 10,\r\n    margin: 15,\r\n    borderRadius: 5\r\n  },\r\n  });\r\n"]},"metadata":{},"sourceType":"module"}