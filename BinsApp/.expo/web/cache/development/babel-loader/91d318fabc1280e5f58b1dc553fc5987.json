{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\SelectFacility.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FormInputHandler from \"../components/FormInputHandler.js\";\nimport StorageCompanyCard from \"../components/StorageCompanyCard\";\nimport LongButton from \"../components/LongButton.js\";\n\nvar SelectFacility = function (_React$Component) {\n  _inherits(SelectFacility, _React$Component);\n\n  var _super = _createSuper(SelectFacility);\n\n  function SelectFacility(props) {\n    var _this;\n\n    _classCallCheck(this, SelectFacility);\n\n    _this = _super.call(this, props);\n\n    _this.UnitSizeSeparator = function () {\n      return React.createElement(View, {\n        style: {\n          padding: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.state = {\n      unitSize: '',\n      selectFacilityModal: false,\n      addressLine1: '',\n      addressLine2: '',\n      city: '',\n      state: '',\n      zip: '',\n      specialInstructions: ''\n    };\n    return _this;\n  }\n\n  _createClass(SelectFacility, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.findFacilityText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, \"Let's find a facility based on your needs:\"), React.createElement(Text, {\n        style: styles.descriptionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, \"Address Line 1\"), React.createElement(FormInputHandler, {\n        defaultText: \"Address Line 1\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            addressLine1: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.descriptionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, \"Address Line 2\"), React.createElement(FormInputHandler, {\n        defaultText: \"Address Line 2\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            addressLine2: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.descriptionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, \"City\"), React.createElement(FormInputHandler, {\n        defaultText: \"City\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            city: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.descriptionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, \"State\"), React.createElement(FormInputHandler, {\n        defaultText: \"State\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            state: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.descriptionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, \"Zip\"), React.createElement(FormInputHandler, {\n        defaultText: \"Zip Code\",\n        style: styles.userInfoText,\n        defaultTextColor: \"#8B8B8B\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            zip: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }))), React.createElement(Text, {\n        style: styles.descriptionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, \"Special Instructions\"), React.createElement(FormInputHandler, {\n        defaultText: \"Ex: Gate code, apartment number\",\n        style: styles.userInfoText,\n        defaultTextColor: \"#8B8B8B\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            specialInstructions: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.findFacilityText), {}, {\n          paddingTop: 40\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, \"Now select the unit size you want: \"), React.createElement(View, {\n        style: styles.unitSizeView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.unitColumnView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n          borderWidth: this.state.unitSize == '5x5' ? 2 : 0\n        }),\n        onPress: function onPress() {\n          return _this2.setState({\n            unitSize: '5x5'\n          });\n        },\n        underlayColor: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, \" 5x5\")), React.createElement(TouchableHighlight, {\n        style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n          borderWidth: this.state.unitSize == '5x10' ? 2 : 0\n        }),\n        onPress: function onPress() {\n          return _this2.setState({\n            unitSize: '5x10'\n          });\n        },\n        underlayColor: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, \"5x10\"))), React.createElement(View, {\n        style: styles.unitColumnView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n          borderWidth: this.state.unitSize == '10x10' ? 2 : 0\n        }),\n        onPress: function onPress() {\n          return _this2.setState({\n            unitSize: '10x10'\n          });\n        },\n        underlayColor: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, \"10x10\")), React.createElement(TouchableHighlight, {\n        style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n          borderWidth: this.state.unitSize == '10x15' ? 2 : 0\n        }),\n        onPress: function onPress() {\n          return _this2.setState({\n            unitSize: '10x15'\n          });\n        },\n        underlayColor: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, \"10x15\"))), React.createElement(View, {\n        style: styles.unitColumnView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n          borderWidth: this.state.unitSize == '15x15' ? 2 : 0\n        }),\n        onPress: function onPress() {\n          return _this2.setState({\n            unitSize: '15x15'\n          });\n        },\n        underlayColor: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, \"15x15\")), React.createElement(TouchableHighlight, {\n        style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n          borderWidth: this.state.unitSize == '15x20' ? 2 : 0\n        }),\n        onPress: function onPress() {\n          return _this2.setState({\n            unitSize: '15x20'\n          });\n        },\n        underlayColor: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, \"15x20\")))), React.createElement(View, {\n        style: {\n          paddingTop: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, React.createElement(LongButton, {\n        title: \"Find a Unit!\",\n        onPress: function onPress() {\n          _this2.state.unitSize == '' ? Alert.alert('select unit size/input address') : _this2.props.navigation.navigate('AccountInfoScreen', {\n            addressLine1: _this2.state.addressLine1,\n            addressLine2: _this2.state.addressLine2,\n            city: _this2.state.city,\n            state: _this2.state.state,\n            zip: _this2.state.zip,\n            specialInstructions: _this2.state.specialInstructions\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return SelectFacility;\n}(React.Component);\n\nexport { SelectFacility as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136',\n    padding: 25\n  },\n  findFacilityText: {\n    flexDirection: 'row',\n    fontSize: 15,\n    justifyContent: 'center',\n    paddingTop: 5,\n    textAlign: 'center',\n    color: 'white',\n    marginBottom: 20\n  },\n  unitSizeView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 25\n  },\n  unitColumnView: {\n    flexDirection: 'column'\n  },\n  openButton: {\n    backgroundColor: \"#7B1FA2\",\n    borderRadius: 20,\n    elevation: 2,\n    margin: 10,\n    padding: 10,\n    borderColor: '#FFF'\n  },\n  addressInput: {\n    backgroundColor: '#F5F5F5',\n    height: 40,\n    textAlign: 'center'\n  },\n  map: {\n    width: 150,\n    height: 150,\n    margin: 15\n  },\n  selectFacilityModalView: {\n    backgroundColor: '#F5F5F5',\n    marginTop: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15\n  },\n  descriptionText: {\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/SelectFacility.js"],"names":["React","FormInputHandler","StorageCompanyCard","LongButton","SelectFacility","props","UnitSizeSeparator","padding","state","unitSize","selectFacilityModal","addressLine1","addressLine2","city","zip","specialInstructions","styles","container","findFacilityText","descriptionText","userInfoText","text","setState","flexDirection","justifyContent","flex","paddingTop","unitSizeView","unitColumnView","openButton","borderWidth","color","Alert","alert","navigation","navigate","Component","StyleSheet","create","backgroundColor","fontSize","textAlign","marginBottom","marginTop","borderRadius","elevation","margin","borderColor","addressInput","height","map","width","selectFacilityModalView","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, SafeAreaView, StyleSheet, Text, TouchableHighlight, View, TextInput, Picker, FlatList, Button, Alert, Image } from 'react-native';\nimport FormInputHandler from '../components/FormInputHandler.js'\nimport StorageCompanyCard from '../components/StorageCompanyCard'\nimport LongButton from '../components/LongButton.js'\n\nexport default class SelectFacility extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unitSize: '',    // may want error handling in case they try and press without selecting unit size\n      selectFacilityModal: false,\n      addressLine1: '',\n      addressLine2: '',\n      city: '',\n      state: '',\n      zip: '',\n      specialInstructions: '',\n    };\n  }\n\n  UnitSizeSeparator = () => {\n    return(\n      <View style={{padding: 5}}>\n      </View>\n    )\n  }\n\n  // TODO: make sure the tab formatting is correct, some might be off (maybe)\n  render() {\n    return (\n      <View style = {styles.container}>\n        <Text style={styles.findFacilityText}>Let's find a facility based on your needs:</Text>\n        <Text style ={styles.descriptionText}>Address Line 1</Text>\n        <FormInputHandler\n          defaultText='Address Line 1'\n          defaultTextColor='#8B8B8B'\n          style={styles.userInfoText}\n          onChangeText={(text) => this.setState({addressLine1: text})}\n        />\n        <Text style ={styles.descriptionText}>Address Line 2</Text>\n        <FormInputHandler\n          defaultText='Address Line 2'\n          defaultTextColor='#8B8B8B'\n          style={styles.userInfoText}\n          onChangeText={(text) => this.setState({addressLine2: text})}\n        />\n        <Text style ={styles.descriptionText}>City</Text>\n        <FormInputHandler\n          defaultText='City'\n          defaultTextColor='#8B8B8B'\n          style={styles.userInfoText}\n          onChangeText={(text) => this.setState({city: text})}\n        />\n        <View style={{flexDirection:'row', justifyContent: 'space-between'}}>\n          <View style={{flex:1}}>\n            <Text style ={styles.descriptionText}>State</Text>\n            <FormInputHandler\n              defaultText='State'\n              defaultTextColor='#8B8B8B'\n              style={styles.userInfoText}\n              onChangeText={(text) => this.setState({state: text})}\n            />\n          </View>\n          <View style={{flex:1}}>\n            <Text style ={styles.descriptionText}>Zip</Text>\n            <FormInputHandler\n              defaultText='Zip Code'\n              style={styles.userInfoText}\n              defaultTextColor='#8B8B8B'\n              onChangeText={(text) => this.setState({zip: text})}\n            />\n          </View>\n        </View>\n        <Text style ={styles.descriptionText}>Special Instructions</Text>\n        <FormInputHandler\n            defaultText='Ex: Gate code, apartment number'\n            style={styles.userInfoText}\n            defaultTextColor='#8B8B8B'\n            onChangeText={(text) => this.setState({specialInstructions: text})}\n        />\n\n        <Text style={{...styles.findFacilityText, paddingTop: 40}}>Now select the unit size you want: </Text>\n        <View style={styles.unitSizeView}>\n            <View style={styles.unitColumnView}>\n              <TouchableHighlight\n                style={{...styles.openButton, borderWidth: this.state.unitSize == '5x5' ? 2 : 0}}\n                onPress={() => this.setState({ unitSize: '5x5' })}\n                underlayColor='white'\n              >\n                <Text style={{color:'white'}}> 5x5</Text>\n              </TouchableHighlight>\n              <TouchableHighlight\n                style={{...styles.openButton, borderWidth: this.state.unitSize == '5x10' ? 2 : 0}}\n                onPress={() => this.setState({ unitSize: '5x10' })}\n                underlayColor='white'\n              >\n                <Text style={{color:'white'}}>5x10</Text>\n              </TouchableHighlight>\n            </View>\n            <View style={styles.unitColumnView}>\n              <TouchableHighlight\n                style={{...styles.openButton, borderWidth: this.state.unitSize == '10x10' ? 2 : 0}}\n                onPress={() => this.setState({ unitSize: '10x10' })}\n                underlayColor='white'\n              >\n                <Text style={{color:'white'}}>10x10</Text>\n              </TouchableHighlight>\n              <TouchableHighlight\n                style={{...styles.openButton, borderWidth: this.state.unitSize == '10x15' ? 2 : 0}}\n                onPress={() => this.setState({ unitSize: '10x15' })}\n                underlayColor='white'\n              >\n                <Text style={{color:'white'}}>10x15</Text>\n              </TouchableHighlight>\n            </View>\n            <View style={styles.unitColumnView}>\n              <TouchableHighlight\n                style={{...styles.openButton, borderWidth: this.state.unitSize == '15x15' ? 2 : 0}}\n                onPress={() => this.setState({ unitSize: '15x15' })}\n                underlayColor='white'\n              >\n                <Text style={{color:'white'}}>15x15</Text>\n              </TouchableHighlight>\n              <TouchableHighlight\n                style={{...styles.openButton, borderWidth: this.state.unitSize == '15x20' ? 2 : 0}}\n                onPress={() => this.setState({ unitSize: '15x20' })}\n                underlayColor='white'\n              >\n                <Text style={{color:'white'}}>15x20</Text>\n              </TouchableHighlight>\n            </View>\n         </View>\n\n        <View style={{paddingTop: 40}}>\n          <LongButton\n            title='Find a Unit!'\n            onPress={() => {\n              this.state.unitSize == ''  ? Alert.alert('select unit size/input address') :\n                this.props.navigation.navigate('AccountInfoScreen', \n                  {addressLine1: this.state.addressLine1, addressLine2: this.state.addressLine2, \n                   city: this.state.city, state: this.state.state, zip: this.state.zip, \n                   specialInstructions: this.state.specialInstructions});\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n\n\n  // THIS IS THE CODE FOR THE MODAL in case we determine it should be added back in\n  /*\n    <View style={styles.selectFacilityModalView}>\n          <Modal\n            animationType='fade'\n            transparent={true}\n            visible={this.state.selectFacilityModal}\n          >\n            <SafeAreaView style={styles.selectFacilityModalView}>\n              <StorageCompanyCard\n                companyName=\"CubeSmart\"\n                onPress={()=>{\n                  this.setState({ selectFacilityModal: false })\n                  this.props.navigation.navigate('AccountInfoScreen')\n                }}\n              />\n              <StorageCompanyCard\n                companyName=\"Extra Space Storage\"\n                onPress={()=>{\n                  this.setState({ selectFacilityModal: false })\n                  this.props.navigation.navigate('AccountInfoScreen')\n                }}\n              />\n              <StorageCompanyCard\n                companyName=\"Public Storage\"\n                onPress={()=>{\n                  this.setState({ selectFacilityModal: false })\n                  this.props.navigation.navigate('AccountInfoScreen')\n                }}\n              />\n              <View style={{alignItems: 'center'}}>\n                <Image\n                  style={styles.map}\n                  source={{uri: 'https://i.pinimg.com/originals/0a/50/5a/0a505ae5b9946975cd2347d222c5cc8a.png'}}\n                />\n              </View>\n              <Button\n                title='Cancel'\n                onPress={() => this.setState({ selectFacilityModal: false })}\n              />\n            </SafeAreaView>\n          </Modal>\n        </View>\n  */\n\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136',\n    padding: 25,\n  },\n  findFacilityText: {\n    flexDirection: 'row',\n    fontSize: 15,\n    justifyContent: 'center',\n    paddingTop: 5,\n    textAlign: 'center',\n    color: 'white',\n    marginBottom: 20,\n  },\n  unitSizeView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 25\n  },\n  unitColumnView: {\n    flexDirection: 'column'\n  },\n  openButton: {\n    backgroundColor: \"#7B1FA2\",\n    borderRadius: 20,\n    elevation: 2,\n    margin: 10,\n    padding: 10,\n    borderColor: '#FFF'\n  },\n  addressInput: {\n    backgroundColor: '#F5F5F5',\n    height: 40,\n    textAlign: 'center'\n  },\n  map: {\n    width: 150,\n    height: 150,\n    margin: 15,\n  },\n  selectFacilityModalView: {\n    backgroundColor: '#F5F5F5',\n    marginTop: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15,\n  },\n  descriptionText:{\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}