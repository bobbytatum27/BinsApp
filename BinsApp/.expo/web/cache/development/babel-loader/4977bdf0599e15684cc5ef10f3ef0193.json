{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\Orders.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport FormInputHandler from \"../components/FormInputHandler.js\";\nimport Textbox from \"../components/Textbox.js\";\nimport { LoginContext } from \"../components/LoginProvider.js\";\nimport { Auth } from 'aws-amplify';\n\nvar Orders = function (_Component) {\n  _inherits(Orders, _Component);\n\n  var _super = _createSuper(Orders);\n\n  function Orders() {\n    var _this;\n\n    _classCallCheck(this, Orders);\n\n    _this = _super.call(this);\n\n    _this.renderItem = function (data) {\n      if (data.item.name == Auth.user.attributes.email) {\n        return React.createElement(View, {\n          style: {\n            margin: 10,\n            backgroundColor: 'white',\n            borderRadius: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }\n        }, React.createElement(Textbox, {\n          header: \"Date and Time\",\n          body: data.item.date,\n          body2: data.item.time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }\n        }), React.createElement(Textbox, {\n          header: \"Address\",\n          body: data.item.address,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }\n        }), React.createElement(Textbox, {\n          header: \"Order Type\",\n          body: \"Pickup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }\n        }));\n      }\n    };\n\n    _this._onRefresh = function () {\n      _this.setState({\n        refreshing: true\n      });\n\n      fetch('http://192.168.1.247:5000/renderorders').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this.setState({\n          dataSource: responseJson\n        });\n      }).catch(function (error) {\n        console.log(error);\n      }).then(function () {\n        _this.setState({\n          refreshing: false\n        });\n      });\n    };\n\n    _this.state = {\n      dataSource: [],\n      dateSelected: '',\n      timeSelected: '',\n      refreshing: false\n    };\n    return _this;\n  }\n\n  _createClass(Orders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://192.168.1.247:5000/renderorders').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          dataSource: responseJson\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.sectionHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, \"Upcoming Orders\"), React.createElement(FlatList, {\n        data: this.state.dataSource,\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        extraData: this.state,\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.refreshing,\n          onRefresh: this._onRefresh,\n          tintColor: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nOrders.contextType = LoginContext;\nexport { Orders as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136',\n    padding: 25\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15\n  },\n  descriptionText: {\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white'\n  },\n  questionText: {\n    fontSize: 20,\n    paddingTop: 15\n  },\n  header: {\n    color: '#AAB5E0',\n    fontSize: 25,\n    margin: 15,\n    justifyContent: 'center'\n  },\n  sectionHeader: {\n    color: '#AAB5E0',\n    fontSize: 25,\n    marginLeft: 15,\n    marginBottom: 25\n  },\n  textbox: {\n    flexDirection: 'column',\n    backgroundColor: 'white',\n    padding: 10,\n    marginLeft: 15,\n    marginRight: 15,\n    marginBottom: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/Orders.js"],"names":["React","Component","FormInputHandler","Textbox","LoginContext","Auth","Orders","renderItem","data","item","name","user","attributes","email","margin","backgroundColor","borderRadius","date","time","address","_onRefresh","setState","refreshing","fetch","then","response","json","responseJson","dataSource","catch","error","console","log","state","dateSelected","timeSelected","styles","container","sectionHeader","index","toString","contextType","StyleSheet","create","flex","padding","userInfoText","borderColor","borderWidth","textAlign","color","descriptionText","marginBottom","marginLeft","questionText","fontSize","paddingTop","header","justifyContent","textbox","flexDirection","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Button, Alert, FlatList, TouchableOpacity, RefreshControl } from 'react-native';\r\nimport FormInputHandler from '../components/FormInputHandler.js'\r\nimport Textbox from '../components/Textbox.js'\r\nimport {LoginContext} from '../components/LoginProvider.js'\r\nimport {Auth} from 'aws-amplify';\r\n\r\nexport default class Orders extends Component {\r\n  static contextType = LoginContext;\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dataSource: [],\r\n      dateSelected: '',\r\n      timeSelected: '',\r\n      refreshing: false\r\n    }\r\n  }\r\n\r\n  renderItem = data => {\r\n    if (data.item.name == Auth.user.attributes.email) {\r\n      return (\r\n        <View style = {{margin: 10, backgroundColor: 'white', borderRadius: 15}}>\r\n        <Textbox header='Date and Time'\r\n                 body={data.item.date}\r\n                 body2={data.item.time} />\r\n        <Textbox header='Address'\r\n                 body={data.item.address}/>\r\n        <Textbox header='Order Type'\r\n                 body='Pickup'/>\r\n        </View>\r\n    )\r\n  }\r\n}\r\n\r\n_onRefresh = () => {\r\n  this.setState({refreshing: true});\r\n  fetch('http://192.168.1.247:5000/renderorders')\r\n  .then((response) => response.json())\r\n  .then((responseJson) => {\r\n    this.setState({dataSource: responseJson});\r\n  })\r\n  .catch((error) => {\r\n    console.log(error)\r\n  })\r\n  .then(() => {\r\n    this.setState({refreshing: false});\r\n  });\r\n}\r\n\r\ncomponentDidMount() {\r\n  fetch('http://192.168.1.247:5000/renderorders')\r\n  .then((response) => response.json())\r\n  .then((responseJson) => {\r\n    this.setState({dataSource: responseJson});\r\n  })\r\n  .catch((error) => {\r\n    console.log(error)\r\n  })\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.sectionHeader}>Upcoming Orders</Text>\r\n          <FlatList\r\n            data={this.state.dataSource}\r\n            renderItem={this.renderItem}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            extraData={this.state}\r\n            refreshControl={\r\n              <RefreshControl\r\n                refreshing={this.state.refreshing}\r\n                onRefresh={this._onRefresh}\r\n                tintColor = 'white'  />\r\n            }\r\n          />\r\n      </View>\r\n    );\r\n  }\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#261136',\r\n    padding: 25\r\n  },\r\n  userInfoText: {\r\n    borderColor: '#4826A0',\r\n    borderWidth: 1,\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    margin: 15,\r\n    padding: 15,\r\n  },\r\n  descriptionText:{\r\n    marginBottom: -10,\r\n    marginLeft: 15,\r\n    color: 'white',\r\n  },\r\n  questionText: {\r\n    fontSize: 20,\r\n    paddingTop: 15\r\n  },\r\n  header: {\r\n    color: '#AAB5E0',\r\n    fontSize: 25,\r\n    margin: 15,\r\n    justifyContent: 'center',\r\n  },\r\n  sectionHeader: {\r\n    color: '#AAB5E0',\r\n    fontSize: 25,\r\n    marginLeft: 15,\r\n    marginBottom: 25\r\n  },\r\n  textbox: {\r\n    flexDirection: 'column',\r\n    backgroundColor: 'white',\r\n    padding: 10,\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n    marginBottom: 1,\r\n  },\r\n  });\r\n"]},"metadata":{},"sourceType":"module"}