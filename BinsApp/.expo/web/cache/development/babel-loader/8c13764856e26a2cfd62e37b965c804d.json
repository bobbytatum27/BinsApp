{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\EditAddress.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FormInputHandler from \"../components/FormInputHandler.js\";\nimport LongButton from \"../components/LongButton.js\";\nimport { LoginContext } from \"../components/LoginProvider.js\";\nimport { Auth } from 'aws-amplify';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Url } from \"../src/components/url.js\";\nimport InputValidator from \"../components/InputValidator.js\";\nimport { ZipCodes } from \"../src/components/zipcodes.js\";\nimport DropDownPicker from 'react-native-dropdown-picker';\n\nvar EditAddress = function (_React$Component) {\n  _inherits(EditAddress, _React$Component);\n\n  var _super = _createSuper(EditAddress);\n\n  function EditAddress(props) {\n    var _this;\n\n    _classCallCheck(this, EditAddress);\n\n    _this = _super.call(this, props);\n\n    _this.checkAddress = function () {\n      return ZipCodes.includes(_this.state.zip);\n    };\n\n    _this.findUnit = function () {\n      console.log(_this.state.building);\n\n      if (_this.state.addressLine1 == '' || _this.state.city == '' || _this.state.state == '' || _this.state.zip == '') {\n        Alert.alert('You\\'ve left an important field empty in your address!');\n      } else if (_this.checkAddress()) {\n        _this.setState({\n          address: _this.state.addressLine1 + ' ' + _this.state.addressLine2 + ' ' + _this.state.city + ', ' + _this.state.state + ' ' + _this.state.zip\n        }, _this.onSubmit);\n\n        Alert.alert(\"Your Information Has Been Saved\");\n      } else {\n        Alert.alert('Sorry, there are no available facilities near this address yet');\n      }\n    };\n\n    _this.onSubmit = function () {\n      _this.updateUser();\n\n      fetch(Url + '/modifycustomers', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(_this.state)\n      });\n    };\n\n    _this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      address: '',\n      addressLine1: '',\n      addressLine2: '',\n      city: '',\n      state: '',\n      zip: '',\n      specialInstructions: '',\n      building: ''\n    };\n    return _this;\n  }\n\n  _createClass(EditAddress, [{\n    key: \"updateUser\",\n    value: function updateUser() {\n      var user, result;\n      return _regeneratorRuntime.async(function updateUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 2:\n              user = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Auth.updateUserAttributes(user, {\n                'name': this.state.name,\n                'phone_number': this.state.phone,\n                'address': this.state.address,\n                'custom:specialInstructions': this.state.specialInstructions\n              }));\n\n            case 5:\n              result = _context.sent;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Auth.currentUserInfo().then(function (userInfo) {\n        var _userInfo$attributes = userInfo.attributes,\n            attributes = _userInfo$attributes === void 0 ? {} : _userInfo$attributes;\n\n        _this2.setState({\n          name: attributes['name']\n        });\n\n        _this2.setState({\n          email: attributes['email']\n        });\n\n        _this2.setState({\n          phone: attributes['phone_number']\n        });\n\n        _this2.setState({\n          address: attributes['address']\n        });\n\n        _this2.setState({\n          specialInstructions: attributes['custom:specialInstructions']\n        });\n\n        _this2.setState({\n          selectedButton: attributes['custom:size']\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, React.createElement(InputValidator, {\n        titleText: \"Address Line 1\",\n        defaultText: \"Address Line 1\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        autoCapitalize: \"words\",\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            addressLine1: text\n          });\n        },\n        errorMessage: \"Do not leave this field empty!\",\n        checkInput: function checkInput() {\n          if (_this3.state.addressLine1 == '') {\n            return false;\n          } else {\n            return true;\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }), React.createElement(InputValidator, {\n        titleText: \"Address Line 2\",\n        defaultText: \"Address Line 2\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        autoCapitalize: \"words\",\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            addressLine2: text\n          });\n        },\n        errorMessage: \"Do not leave this field empty!\",\n        checkInput: function checkInput() {\n          return true;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }), React.createElement(InputValidator, {\n        titleText: \"City\",\n        defaultText: \"City\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        autoCapitalize: \"words\",\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            city: text\n          });\n        },\n        errorMessage: \"Do not leave this field empty!\",\n        checkInput: function checkInput() {\n          if (_this3.state.city == '') {\n            return false;\n          } else {\n            return true;\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, React.createElement(InputValidator, {\n        titleText: \"State\",\n        defaultText: \"State\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        autoCapitalize: \"characters\",\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            state: text\n          });\n        },\n        errorMessage: \"Please Enter\",\n        checkInput: function checkInput() {\n          if (_this3.state.state == '') {\n            return false;\n          } else {\n            return true;\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, React.createElement(InputValidator, {\n        titleText: \"ZIP\",\n        defaultText: \"ZIP\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        keyboardType: \"number-pad\",\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            zip: text\n          });\n        },\n        errorMessage: \"Invalid ZIP Code!\",\n        checkInput: function checkInput() {\n          if (_this3.state.zip == '' || _this3.state.zip.length != 5) {\n            return false;\n          } else {\n            return true;\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }))), React.createElement(InputValidator, {\n        titleText: \"Special Instructions\",\n        defaultText: \"Ex: Gate Code, Apartment Number\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            specialInstructions: text\n          });\n        },\n        errorMessage: \"Do not leave this field empty!\",\n        checkInput: function checkInput() {\n          return true;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.descriptionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, \"Building Type\"), React.createElement(DropDownPicker, {\n        items: [{\n          label: 'House',\n          value: 'House'\n        }, {\n          label: 'Apartment',\n          value: 'Apartment'\n        }],\n        placeholder: \"House\",\n        arrowSize: 10,\n        arrowColor: \"#FFF\",\n        itemStyle: {\n          justifyContent: 'flex-start'\n        },\n        containerStyle: {\n          margin: 15,\n          height: 50\n        },\n        style: {\n          backgroundColor: '#261136',\n          borderColor: '#4826A0',\n          borderTopLeftRadius: 0,\n          borderTopRightRadius: 0,\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        },\n        placeholderStyle: {\n          color: '#FFF',\n          textAlign: 'center'\n        },\n        selectedLabelStyle: {\n          color: '#FFF',\n          textAlign: 'center'\n        },\n        onChangeItem: function onChangeItem(value) {\n          return _this3.setState({\n            building: value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-end'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, React.createElement(LongButton, {\n        title: \"SAVE INFO\",\n        onPress: this.findUnit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return EditAddress;\n}(React.Component);\n\nEditAddress.contextType = LoginContext;\nexport { EditAddress as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 25,\n    backgroundColor: '#261136'\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15\n  },\n  descriptionText: {\n    marginBottom: -10,\n    paddingLeft: 15,\n    color: 'white'\n  },\n  sectionHeader: {\n    color: '#AAB5E0',\n    fontSize: 25,\n    marginBottom: 25,\n    marginLeft: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/EditAddress.js"],"names":["React","FormInputHandler","LongButton","LoginContext","Auth","Ionicons","Url","InputValidator","ZipCodes","DropDownPicker","EditAddress","props","checkAddress","includes","state","zip","findUnit","console","log","building","addressLine1","city","Alert","alert","setState","address","addressLine2","onSubmit","updateUser","fetch","method","headers","Accept","body","JSON","stringify","name","email","phone","specialInstructions","currentAuthenticatedUser","user","updateUserAttributes","result","currentUserInfo","then","userInfo","attributes","selectedButton","styles","container","flex","userInfoText","text","flexDirection","justifyContent","length","descriptionText","label","value","margin","height","backgroundColor","borderColor","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","color","textAlign","Component","contextType","StyleSheet","create","padding","borderWidth","marginBottom","paddingLeft","sectionHeader","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Button, Alert, ScrollView } from 'react-native';\r\nimport FormInputHandler from '../components/FormInputHandler.js'\r\nimport LongButton from '../components/LongButton.js'\r\nimport { LoginContext } from '../components/LoginProvider.js';\r\nimport {Auth} from 'aws-amplify';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport {Url} from '../src/components/url.js';\r\nimport InputValidator from '../components/InputValidator.js'\r\nimport {ZipCodes} from '../src/components/zipcodes.js';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\n\r\nexport default class EditAddress extends React.Component {\r\n  static contextType = LoginContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      address: '',\r\n      addressLine1: '',\r\n      addressLine2: '',\r\n      city: '',\r\n      state: '',\r\n      zip: '',\r\n      specialInstructions: '',\r\n      building: '',\r\n\r\n    }\r\n  }\r\n  checkAddress = () => ZipCodes.includes(this.state.zip);\r\n\r\n  findUnit = () => {\r\n    console.log(this.state.building)\r\n    if (this.state.addressLine1 == '' || this.state.city == '' || this.state.state == '' || this.state.zip == '') {\r\n      Alert.alert('You\\'ve left an important field empty in your address!');\r\n    } else if (this.checkAddress()){\r\n      this.setState({address: this.state.addressLine1 + ' ' + this.state.addressLine2 + ' ' + this.state.city + ', ' + this.state.state + ' ' + this.state.zip}, this.onSubmit);\r\n      Alert.alert(\"Your Information Has Been Saved\");\r\n    } else {\r\n      Alert.alert('Sorry, there are no available facilities near this address yet');\r\n    }\r\n  }\r\n\r\n  onSubmit = () => {\r\n      this.updateUser()\r\n      fetch(Url+'/modifycustomers',{\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n    },\r\n      body: JSON.stringify(this.state)\r\n  })}\r\n\r\n  async updateUser() {\r\n    let user = await Auth.currentAuthenticatedUser();\r\n\r\n    let result = await Auth.updateUserAttributes(user, {\r\n      'name': this.state.name,\r\n      'phone_number': this.state.phone,\r\n      'address': this.state.address,\r\n      'custom:specialInstructions': this.state.specialInstructions,\r\n    });\r\n      }\r\n\r\n  componentDidMount(){\r\n    Auth.currentUserInfo().then((userInfo) => {\r\n      const { attributes = {} } = userInfo;\r\n      this.setState({name:attributes['name']});\r\n      this.setState({email:attributes['email']});\r\n      this.setState({phone:attributes['phone_number']});\r\n      this.setState({address:attributes['address']});\r\n      this.setState({specialInstructions:attributes['custom:specialInstructions']});\r\n      this.setState({selectedButton:attributes['custom:size']});\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={{flex:5}}>\r\n          <InputValidator\r\n            titleText='Address Line 1'\r\n            defaultText='Address Line 1'\r\n            defaultTextColor='#8B8B8B'\r\n            style={styles.userInfoText}\r\n            autoCapitalize='words'\r\n            returnKeyType='next'\r\n            onChangeText={(text) => this.setState({addressLine1: text})}\r\n            errorMessage='Do not leave this field empty!'\r\n            checkInput={() => {\r\n              if (this.state.addressLine1 == '') {\r\n                return false;\r\n              } else {\r\n                return true;\r\n              }\r\n            }}\r\n          /><InputValidator\r\n            titleText='Address Line 2'\r\n            defaultText='Address Line 2'\r\n            defaultTextColor='#8B8B8B'\r\n            style={styles.userInfoText}\r\n            autoCapitalize='words'\r\n            returnKeyType='next'\r\n            onChangeText={(text) => this.setState({addressLine2: text})}\r\n            errorMessage='Do not leave this field empty!'\r\n            checkInput={() => true /*this field is optional, so automatically valid*/}\r\n          />\r\n          <InputValidator\r\n            titleText='City'\r\n            defaultText='City'\r\n            defaultTextColor='#8B8B8B'\r\n            style={styles.userInfoText}\r\n            autoCapitalize='words'\r\n            returnKeyType='next'\r\n            onChangeText={(text) => this.setState({city: text})}\r\n            errorMessage='Do not leave this field empty!'\r\n            checkInput={() => {\r\n              if (this.state.city == '') {\r\n                return false;\r\n              } else {\r\n                return true;\r\n              }\r\n            }}\r\n          />\r\n          <View style={{flexDirection:'row', justifyContent: 'space-between'}}>\r\n            <View style={{flex:1}}>\r\n              <InputValidator\r\n                titleText='State'\r\n                defaultText='State'\r\n                defaultTextColor='#8B8B8B'\r\n                style={styles.userInfoText}\r\n                autoCapitalize='characters'\r\n                returnKeyType='next'\r\n                onChangeText={(text) => this.setState({state: text})}\r\n                errorMessage='Please Enter'\r\n                checkInput={() => {\r\n                  if (this.state.state == '') {\r\n                    return false;\r\n                  } else {\r\n                    return true;\r\n                  }\r\n                }}\r\n              />\r\n            </View>\r\n            <View style={{flex:1}}>\r\n              <InputValidator\r\n                titleText='ZIP'\r\n                defaultText='ZIP'\r\n                defaultTextColor='#8B8B8B'\r\n                style={styles.userInfoText}\r\n                keyboardType='number-pad'\r\n                returnKeyType='next'\r\n                onChangeText={(text) => this.setState({zip: text})}\r\n                errorMessage='Invalid ZIP Code!'\r\n                checkInput={() => {\r\n                  if (this.state.zip == '' || this.state.zip.length != 5) { // still need to validate only numbers\r\n                    return false;\r\n                  } else {\r\n                    return true;\r\n                  }\r\n                }}\r\n              />\r\n            </View>\r\n          </View>\r\n          <InputValidator\r\n            titleText='Special Instructions'\r\n            defaultText='Ex: Gate Code, Apartment Number'\r\n            defaultTextColor='#8B8B8B'\r\n            style={styles.userInfoText}\r\n            returnKeyType='next'\r\n            onChangeText={(text) => this.setState({specialInstructions: text})}\r\n            errorMessage='Do not leave this field empty!'\r\n            checkInput={() => true /*this field is optional, so automatically valid*/}\r\n          />\r\n          <Text style={styles.descriptionText}>Building Type</Text>\r\n          <DropDownPicker\r\n            items={[\r\n                  {label: 'House', value: 'House'},\r\n                  {label: 'Apartment', value: 'Apartment'}\r\n            ]}\r\n            placeholder={\"House\"}\r\n            arrowSize={10}\r\n            arrowColor={\"#FFF\"}\r\n            itemStyle={{justifyContent: 'flex-start'}}\r\n            containerStyle={{margin: 15, height: 50}}\r\n            style={{backgroundColor: '#261136', borderColor: '#4826A0', borderTopLeftRadius: 0, borderTopRightRadius: 0, borderBottomLeftRadius: 0, borderBottomRightRadius: 0,}}\r\n            placeholderStyle={{color: '#FFF', textAlign: 'center'}}\r\n            selectedLabelStyle={{color: '#FFF', textAlign: 'center'}}\r\n            onChangeItem={(value) => this.setState({building: value})}\r\n          />\r\n        </View>\r\n        <View style={{flex:1, justifyContent: 'flex-end'}}>\r\n          <LongButton\r\n            title=\"SAVE INFO\"\r\n            onPress={this.findUnit}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 25,\r\n    backgroundColor: '#261136',\r\n  },\r\n  userInfoText: {\r\n    borderColor: '#4826A0',\r\n    borderWidth: 1,\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    margin: 15,\r\n    padding: 15,\r\n  },\r\n  descriptionText:{\r\n    marginBottom: -10,\r\n    paddingLeft: 15,\r\n    color: 'white',\r\n  },\r\n  sectionHeader: {\r\n    color: '#AAB5E0',\r\n    fontSize: 25,\r\n    marginBottom: 25,\r\n    marginLeft: 15\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}