{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\ScheduleAppointment.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FormInputHandler from \"../components/FormInputHandler.js\";\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nimport LongButton from \"../components/LongButton.js\";\n\nvar ScheduleAppointment = function (_Component) {\n  _inherits(ScheduleAppointment, _Component);\n\n  var _super = _createSuper(ScheduleAppointment);\n\n  function ScheduleAppointment(props) {\n    var _this;\n\n    _classCallCheck(this, ScheduleAppointment);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      dateSelected: '',\n      timeSelected: '',\n      selectedButton: null\n    };\n    _this.selectionOnPress = _this.selectionOnPress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScheduleAppointment, [{\n    key: \"selectionOnPress\",\n    value: function selectionOnPress(userType) {\n      this.setState({\n        selectedButton: userType\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          marginBottom: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.descriptionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, \"Please Select a Date\"), React.createElement(Calendar, {\n        style: {\n          margin: 15\n        },\n        onDayPress: function onDayPress(day) {\n          _this2.setState({\n            dateSelected: _defineProperty({}, day.dateString, {\n              selected: true,\n              selectedColor: '#466A8F'\n            })\n          });\n        },\n        markedDates: this.state.dateSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.descriptionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"Please select a time\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          borderColor: '#d6d7da',\n          flexWrap: 'wrap',\n          marginTop: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          margin: 5,\n          borderRadius: 10,\n          padding: 5,\n          backgroundColor: '#7B1FA2',\n          borderColor: '#FFF',\n          borderWidth: this.state.selectedButton === '8am-10am' ? 2 : 0\n        },\n        onPress: function onPress() {\n          return _this2.selectionOnPress(\"8am-10am\");\n        },\n        onPressIn: function onPressIn() {\n          return _this2.setState({\n            timeSelected: '8am'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.switchButtonsText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, \"8am-10am\")), React.createElement(TouchableOpacity, {\n        style: {\n          margin: 5,\n          borderRadius: 10,\n          padding: 5,\n          backgroundColor: '#7B1FA2',\n          borderColor: '#FFF',\n          borderWidth: this.state.selectedButton === '10am-12pm' ? 2 : 0\n        },\n        onPress: function onPress() {\n          return _this2.selectionOnPress(\"10am-12pm\");\n        },\n        onPressIn: function onPressIn() {\n          return _this2.setState({\n            timeSelected: '10am'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.switchButtonsText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, \"10am-12pm\")), React.createElement(TouchableOpacity, {\n        style: {\n          margin: 5,\n          borderRadius: 10,\n          padding: 5,\n          backgroundColor: '#7B1FA2',\n          borderColor: '#FFF',\n          borderWidth: this.state.selectedButton === '12pm-2pm' ? 2 : 0\n        },\n        onPress: function onPress() {\n          return _this2.selectionOnPress(\"12pm-2pm\");\n        },\n        onPressIn: function onPressIn() {\n          return _this2.setState({\n            timeSelected: '12pm'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.switchButtonsText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, \"12pm-2pm\")), React.createElement(TouchableOpacity, {\n        style: {\n          margin: 5,\n          borderRadius: 10,\n          padding: 5,\n          backgroundColor: '#7B1FA2',\n          borderColor: '#FFF',\n          borderWidth: this.state.selectedButton === '2pm-4pm' ? 2 : 0\n        },\n        onPress: function onPress() {\n          return _this2.selectionOnPress(\"2pm-4pm\");\n        },\n        onPressIn: function onPressIn() {\n          return _this2.setState({\n            timeSelected: '2pm'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.switchButtonsText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, \"2pm-4pm\")), React.createElement(TouchableOpacity, {\n        style: {\n          margin: 5,\n          borderRadius: 10,\n          padding: 5,\n          backgroundColor: '#7B1FA2',\n          borderColor: '#FFF',\n          borderWidth: this.state.selectedButton === '4pm-6pm' ? 2 : 0\n        },\n        onPress: function onPress() {\n          return _this2.selectionOnPress(\"4pm-6pm\");\n        },\n        onPressIn: function onPressIn() {\n          return _this2.setState({\n            timeSelected: '4pm'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.switchButtonsText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, \"4pm-6pm\")), React.createElement(TouchableOpacity, {\n        style: {\n          margin: 5,\n          borderRadius: 10,\n          padding: 5,\n          backgroundColor: '#7B1FA2',\n          borderColor: '#FFF',\n          borderWidth: this.state.selectedButton === '6pm-8pm' ? 2 : 0\n        },\n        onPress: function onPress() {\n          return _this2.selectionOnPress(\"6pm-8pm\");\n        },\n        onPressIn: function onPressIn() {\n          return _this2.setState({\n            timeSelected: '6pm'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.switchButtonsText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, \"6pm-8pm\"))), React.createElement(LongButton, {\n        title: \"NEXT\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('ReviewScreen', {\n            dateSelected: _this2.state.dateSelected,\n            timeSelected: _this2.state.timeSelected\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return ScheduleAppointment;\n}(Component);\n\nexport { ScheduleAppointment as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136',\n    padding: 25\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15\n  },\n  descriptionText: {\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white'\n  },\n  switchButtonsText: {\n    fontSize: 20,\n    color: '#FFF'\n  },\n  timeButton: {\n    margin: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/ScheduleAppointment.js"],"names":["React","Component","FormInputHandler","Calendar","CalendarList","Agenda","LongButton","ScheduleAppointment","props","state","dateSelected","timeSelected","selectedButton","selectionOnPress","bind","userType","setState","styles","container","marginBottom","descriptionText","margin","day","dateString","selected","selectedColor","flexDirection","justifyContent","borderColor","flexWrap","marginTop","borderRadius","padding","backgroundColor","borderWidth","switchButtonsText","navigation","navigate","StyleSheet","create","flex","userInfoText","textAlign","color","marginLeft","fontSize","timeButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Button, Alert, Image, ScrollView, TouchableOpacity } from 'react-native';\r\nimport FormInputHandler from '../components/FormInputHandler.js'\r\nimport {Calendar, CalendarList, Agenda} from 'react-native-calendars';\r\nimport LongButton from '../components/LongButton.js'\r\n\r\nexport default class ScheduleAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dateSelected: '',\r\n      timeSelected: '',\r\n      selectedButton: null,\r\n    }\r\n    this.selectionOnPress = this.selectionOnPress.bind(this)\r\n  }\r\n\r\n  selectionOnPress(userType) {\r\n  this.setState({selectedButton: userType})\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ScrollView style={{marginBottom:25}}>\r\n            <Text style ={styles.descriptionText}>Please Select a Date</Text>\r\n            <Calendar\r\n              style={{margin:15}}\r\n              onDayPress={(day) => {this.setState({dateSelected:{[day.dateString]:{selected: true, selectedColor: '#466A8F'}}})}}\r\n              markedDates={this.state.dateSelected}/>\r\n            <Text style={styles.descriptionText}>Please select a time</Text>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-around', borderColor: '#d6d7da', flexWrap: 'wrap', marginTop: 25}}>\r\n              <TouchableOpacity\r\n                style = {{margin: 5, borderRadius: 10, padding: 5, backgroundColor: '#7B1FA2', borderColor: '#FFF', borderWidth: this.state.selectedButton === '8am-10am' ? 2 : 0}}\r\n                onPress={() => this.selectionOnPress(\"8am-10am\")}\r\n                onPressIn={() => this.setState({timeSelected: '8am'})}>\r\n              <Text style={styles.switchButtonsText}>8am-10am</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style = {{margin: 5, borderRadius: 10, padding: 5, backgroundColor: '#7B1FA2', borderColor: '#FFF', borderWidth: this.state.selectedButton === '10am-12pm' ? 2 : 0}}\r\n                onPress={() => this.selectionOnPress(\"10am-12pm\")}\r\n                onPressIn={() => this.setState({timeSelected: '10am'})}>\r\n              <Text style={styles.switchButtonsText}>10am-12pm</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style = {{margin: 5, borderRadius: 10, padding: 5, backgroundColor: '#7B1FA2', borderColor: '#FFF', borderWidth: this.state.selectedButton === '12pm-2pm' ? 2 : 0}}\r\n                onPress={() => this.selectionOnPress(\"12pm-2pm\")}\r\n                onPressIn={() => this.setState({timeSelected: '12pm'})}>\r\n              <Text style={styles.switchButtonsText}>12pm-2pm</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style = {{margin: 5, borderRadius: 10, padding: 5, backgroundColor: '#7B1FA2', borderColor: '#FFF', borderWidth: this.state.selectedButton === '2pm-4pm' ? 2 : 0}}\r\n                onPress={() => this.selectionOnPress(\"2pm-4pm\")}\r\n                onPressIn={() => this.setState({timeSelected: '2pm'})}>\r\n                <Text style={styles.switchButtonsText}>2pm-4pm</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style = {{margin: 5, borderRadius: 10, padding: 5, backgroundColor: '#7B1FA2', borderColor: '#FFF', borderWidth: this.state.selectedButton === '4pm-6pm' ? 2 : 0}}\r\n                onPress={() => this.selectionOnPress(\"4pm-6pm\")}\r\n                onPressIn={() => this.setState({timeSelected: '4pm'})}>\r\n              <Text style={styles.switchButtonsText}>4pm-6pm</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style = {{margin: 5, borderRadius: 10, padding: 5, backgroundColor: '#7B1FA2', borderColor: '#FFF', borderWidth: this.state.selectedButton === '6pm-8pm' ? 2 : 0}}\r\n                onPress={() => this.selectionOnPress(\"6pm-8pm\")}\r\n                onPressIn={() => this.setState({timeSelected: '6pm'})}>\r\n              <Text style={styles.switchButtonsText}>6pm-8pm</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          <LongButton\r\n            title=\"NEXT\"\r\n            onPress={()=>this.props.navigation.navigate('ReviewScreen', {dateSelected: this.state.dateSelected,\r\n                                                                         timeSelected: this.state.timeSelected})}\r\n          />\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#261136',\r\n    padding: 25\r\n  },\r\n  userInfoText: {\r\n    borderColor: '#4826A0',\r\n    borderWidth: 1,\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    margin: 15,\r\n    padding: 15,\r\n  },\r\n  descriptionText:{\r\n    marginBottom: -10,\r\n    marginLeft: 15,\r\n    color: 'white',\r\n  },\r\n  switchButtonsText:{\r\n    fontSize: 20,\r\n    color: '#FFF'\r\n  },\r\n  timeButton:{\r\n    margin: 10\r\n  },\r\n\r\n  });\r\n"]},"metadata":{},"sourceType":"module"}