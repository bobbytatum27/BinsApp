{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\SelectFacility.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FormInputHandler from \"../components/FormInputHandler.js\";\nimport StorageCompanyCard from \"../components/StorageCompanyCard\";\nimport LongButton from \"../components/LongButton.js\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Ionicons } from '@expo/vector-icons';\nimport InputValidator from \"../components/InputValidator.js\";\nimport { ZipCodes } from \"../src/components/zipcodes.js\";\nimport FacilitySummaryCard from \"../components/SelectFacilityUtils/FacilitySummaryCard.js\";\nimport FacilityModal from \"../components/SelectFacilityUtils/FacilityModal.js\";\n\nvar SelectFacility = function (_React$Component) {\n  _inherits(SelectFacility, _React$Component);\n\n  var _super = _createSuper(SelectFacility);\n\n  function SelectFacility(props) {\n    var _this;\n\n    _classCallCheck(this, SelectFacility);\n\n    _this = _super.call(this, props);\n\n    _this.checkAddress = function () {\n      return ZipCodes.includes(_this.state.zip);\n    };\n\n    _this.findUnit = function () {\n      if (_this.state.addressLine1 == '' || _this.state.city == '' || _this.state.state == '' || _this.state.zip == '') {\n        Alert.alert('You\\'ve left an important field empty in your address!');\n      } else if (_this.checkAddress()) {\n        _this.setState({\n          storageCardIsVisible: true\n        });\n      } else {\n        Alert.alert('Sorry, there are no available facilities near you yet');\n      }\n    };\n\n    _this.selectPaymentPlan = function (unitSize) {\n      var addressData = {\n        addressLine1: _this.state.addressLine1,\n        addressLine2: _this.state.addressLine2,\n        city: _this.state.city,\n        state: _this.state.state,\n        zip: _this.state.zip,\n        specialInstructions: _this.state.specialInstructions,\n        size: unitSize\n      };\n\n      _this.props.navigation.navigate('AccountInfoScreen', addressData);\n\n      _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.state = {\n      unitSize: '',\n      addressLine1: '',\n      addressLine2: '',\n      city: '',\n      state: '',\n      zip: '',\n      specialInstructions: '',\n      storageCardIsVisible: false,\n      modalVisible: false,\n      storageAddress: ''\n    };\n    return _this;\n  }\n\n  _createClass(SelectFacility, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.findFacilityText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, \"Let's find a facility based on your needs:\"), React.createElement(InputValidator, {\n        titleText: \"Address Line 1\",\n        defaultText: \"Address Line 1\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        autoCapitalize: \"words\",\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            addressLine1: text\n          });\n        },\n        errorMessage: \"Do not leave this field empty!\",\n        checkInput: function checkInput() {\n          if (_this2.state.addressLine1 == '') {\n            return false;\n          } else {\n            return true;\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }), React.createElement(InputValidator, {\n        titleText: \"Address Line 2\",\n        defaultText: \"Address Line 2\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        autoCapitalize: \"words\",\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            addressLine2: text\n          });\n        },\n        errorMessage: \"Do not leave this field empty!\",\n        checkInput: function checkInput() {\n          return true;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }), React.createElement(InputValidator, {\n        titleText: \"City\",\n        defaultText: \"City\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        autoCapitalize: \"words\",\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            city: text\n          });\n        },\n        errorMessage: \"Do not leave this field empty!\",\n        checkInput: function checkInput() {\n          if (_this2.state.city == '') {\n            return false;\n          } else {\n            return true;\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }, React.createElement(InputValidator, {\n        titleText: \"State\",\n        defaultText: \"State\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        autoCapitalize: \"characters\",\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            state: text\n          });\n        },\n        errorMessage: \"Please Enter\",\n        checkInput: function checkInput() {\n          if (_this2.state.state == '') {\n            return false;\n          } else {\n            return true;\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, React.createElement(InputValidator, {\n        titleText: \"ZIP\",\n        defaultText: \"ZIP\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        keyboardType: \"number-pad\",\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            zip: text\n          });\n        },\n        errorMessage: \"Invalid ZIP Code!\",\n        checkInput: function checkInput() {\n          if (_this2.state.zip == '' || _this2.state.zip.length != 5) {\n            return false;\n          } else {\n            return true;\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }))), React.createElement(InputValidator, {\n        titleText: \"Special Instructions\",\n        defaultText: \"Ex: Gate Code, Apartment Number\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        returnKeyType: \"next\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            specialInstructions: text\n          });\n        },\n        errorMessage: \"Do not leave this field empty!\",\n        checkInput: function checkInput() {\n          return true;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }), this.state.storageCardIsVisible ? React.createElement(React.Fragment, null, React.createElement(View, {\n        style: {\n          padding: 15,\n          marginTop: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          color: 'white',\n          marginBottom: 15,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }, \"Here's what we found based on your address above.\"), React.createElement(View, {\n        style: {\n          height: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }\n      }), React.createElement(FacilitySummaryCard, {\n        src: require(\"../photos/csimini.png\"),\n        onPress: function onPress() {\n          _this2.setState({\n            modalVisible: true,\n            storageAddress: '855 Parr Boulevard, Richmond, CA 94801'\n          });\n        },\n        address: \"855 Parr Boulevard, Richmond, CA 94801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      }))) : React.createElement(React.Fragment, null, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, React.createElement(LongButton, {\n        title: \"Find a Unit!\",\n        onPress: this.findUnit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }\n      }))), React.createElement(FacilityModal, {\n        modalVisible: this.state.modalVisible,\n        src: require(\"../photos/csimini.png\"),\n        onIconPress: this.closeModal,\n        facilityName: \"CSI Mini Storage\",\n        facilityAddress: this.state.storageAddress,\n        facilityWebsite: \"csiministorage.com\",\n        onSelectPaymentPlan: this.selectPaymentPlan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SelectFacility;\n}(React.Component);\n\nexport { SelectFacility as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136',\n    padding: 25\n  },\n  findFacilityText: {\n    flexDirection: 'row',\n    fontSize: 15,\n    justifyContent: 'center',\n    paddingTop: 5,\n    textAlign: 'center',\n    color: 'white',\n    marginBottom: 20\n  },\n  unitSizeView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 25\n  },\n  unitColumnView: {\n    flexDirection: 'column'\n  },\n  openButton: {\n    backgroundColor: \"#7B1FA2\",\n    borderRadius: 5,\n    margin: 10,\n    padding: 10,\n    borderColor: '#FFF'\n  },\n  addressInput: {\n    backgroundColor: '#F5F5F5',\n    height: 40,\n    textAlign: 'center'\n  },\n  map: {\n    width: 150,\n    height: 150,\n    margin: 15\n  },\n  selectFacilityModalView: {\n    backgroundColor: '#F5F5F5',\n    marginTop: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15,\n    borderRadius: 5\n  },\n  descriptionText: {\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white'\n  },\n  modalView: {\n    flex: 1,\n    marginTop: 120,\n    marginBottom: 50,\n    marginLeft: 25,\n    marginRight: 25,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    justifyContent: 'flex-start',\n    overflow: \"hidden\"\n  },\n  close: {\n    margin: 5,\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    width: 25,\n    height: 25,\n    color: \"#FFF\"\n  },\n  sectionHeader: {\n    color: '#FFF',\n    fontSize: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/SelectFacility.js"],"names":["React","FormInputHandler","StorageCompanyCard","LongButton","TouchableOpacity","Ionicons","InputValidator","ZipCodes","FacilitySummaryCard","FacilityModal","SelectFacility","props","checkAddress","includes","state","zip","findUnit","addressLine1","city","Alert","alert","setState","storageCardIsVisible","selectPaymentPlan","unitSize","addressData","addressLine2","specialInstructions","size","navigation","navigate","modalVisible","closeModal","storageAddress","styles","container","findFacilityText","userInfoText","text","flexDirection","justifyContent","flex","length","padding","marginTop","fontSize","color","marginBottom","textAlign","height","require","Component","StyleSheet","create","backgroundColor","paddingTop","unitSizeView","unitColumnView","openButton","borderRadius","margin","borderColor","addressInput","map","width","selectFacilityModalView","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderWidth","descriptionText","marginLeft","modalView","marginRight","overflow","close","position","top","right","sectionHeader"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, SafeAreaView, StyleSheet, Text, TouchableHighlight, View, TextInput, Picker, FlatList, Button, Alert, Image, ScrollView } from 'react-native';\nimport FormInputHandler from '../components/FormInputHandler.js'\nimport StorageCompanyCard from '../components/StorageCompanyCard'\nimport LongButton from '../components/LongButton.js'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Ionicons } from '@expo/vector-icons';\nimport InputValidator from '../components/InputValidator.js'\nimport {ZipCodes} from '../src/components/zipcodes.js';\n\n// The new imports, TODO: need to remove now useless imports above\nimport FacilitySummaryCard from '../components/SelectFacilityUtils/FacilitySummaryCard.js';\nimport FacilityModal from '../components/SelectFacilityUtils/FacilityModal.js'\n\nexport default class SelectFacility extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unitSize: '',    // I think this is deprecated\n      addressLine1: '',\n      addressLine2: '',\n      city: '',\n      state: '',\n      zip: '',\n      specialInstructions: '',\n      storageCardIsVisible: false,\n      modalVisible: false,\n      storageAddress: '',\n    };\n  }\n\n  /*\n   * Helper which validates ZIP code is within Bins' serviceable area\n   *\n   * @return Boolean value which determines if ZIP code is in Bins' serviceable area\n   */\n  checkAddress = () => ZipCodes.includes(this.state.zip);\n\n  /*\n   *\n   */\n  findUnit = () => {\n    if (this.state.addressLine1 == '' || this.state.city == '' || this.state.state == '' || this.state.zip == '') {\n      Alert.alert('You\\'ve left an important field empty in your address!');\n    } else if (this.checkAddress()){\n      this.setState({storageCardIsVisible: true});\n    } else {\n      Alert.alert('Sorry, there are no available facilities near you yet');\n    }\n  }\n\n  /*\n   * Helper which is called when a unit is selected. Passess address data (might just be zipcode soon)\n   * to next screen and navigates to Account creation screen.\n   *\n   * @param unitSize: A string representing the size of the unit\n   */\n  selectPaymentPlan = (unitSize) => {\n    let addressData = {\n      addressLine1: this.state.addressLine1,\n      addressLine2: this.state.addressLine2,\n      city: this.state.city,\n      state: this.state.state,\n      zip: this.state.zip,\n      specialInstructions: this.state.specialInstructions,\n      size: unitSize,\n    };\n\n    this.props.navigation.navigate('AccountInfoScreen', addressData);\n    this.setState({modalVisible:false});\n  }\n\n  /*\n   * Closes the Payment Plan Modal\n   */\n  closeModal = () => {\n    this.setState({modalVisible: false})\n  }\n\n  // TODO: make sure the tab formatting is correct, some might be off (maybe)\n  render() {\n    return (\n      <ScrollView style = {styles.container}>\n        <Text style={styles.findFacilityText}>Let's find a facility based on your needs:</Text>\n        <InputValidator\n          titleText='Address Line 1'\n          defaultText='Address Line 1'\n          defaultTextColor='#8B8B8B'\n          style={styles.userInfoText}\n          autoCapitalize='words'\n          returnKeyType='next'\n          onChangeText={(text) => this.setState({addressLine1: text})}\n          errorMessage='Do not leave this field empty!'\n          checkInput={() => {\n            if (this.state.addressLine1 == '') {\n              return false;\n            } else {\n              return true;\n            }\n          }}\n        />\n        <InputValidator\n          titleText='Address Line 2'\n          defaultText='Address Line 2'\n          defaultTextColor='#8B8B8B'\n          style={styles.userInfoText}\n          autoCapitalize='words'\n          returnKeyType='next'\n          onChangeText={(text) => this.setState({addressLine2: text})}\n          errorMessage='Do not leave this field empty!'\n          checkInput={() => true /*this field is optional, so automatically valid*/}\n        />\n        <InputValidator\n          titleText='City'\n          defaultText='City'\n          defaultTextColor='#8B8B8B'\n          style={styles.userInfoText}\n          autoCapitalize='words'\n          returnKeyType='next'\n          onChangeText={(text) => this.setState({city: text})}\n          errorMessage='Do not leave this field empty!'\n          checkInput={() => {\n            if (this.state.city == '') {\n              return false;\n            } else {\n              return true;\n            }\n          }}\n        />\n        <View style={{flexDirection:'row', justifyContent: 'space-between'}}>\n          <View style={{flex:1}}>\n            <InputValidator\n              titleText='State'\n              defaultText='State'\n              defaultTextColor='#8B8B8B'\n              style={styles.userInfoText}\n              autoCapitalize='characters'\n              returnKeyType='next'\n              onChangeText={(text) => this.setState({state: text})}\n              errorMessage='Please Enter'\n              checkInput={() => {\n                if (this.state.state == '') {\n                  return false;\n                } else {\n                  return true;\n                }\n              }}\n            />\n          </View>\n          <View style={{flex:1}}>\n            <InputValidator\n              titleText='ZIP'\n              defaultText='ZIP'\n              defaultTextColor='#8B8B8B'\n              style={styles.userInfoText}\n              keyboardType='number-pad'\n              returnKeyType='next'\n              onChangeText={(text) => this.setState({zip: text})}\n              errorMessage='Invalid ZIP Code!'\n              checkInput={() => {\n                if (this.state.zip == '' || this.state.zip.length != 5) { // still need to validate only numbers\n                  return false;\n                } else {\n                  return true;\n                }\n              }}\n            />\n          </View>\n        </View>\n        <InputValidator\n          titleText='Special Instructions'\n          defaultText='Ex: Gate Code, Apartment Number'\n          defaultTextColor='#8B8B8B'\n          style={styles.userInfoText}\n          returnKeyType='next'\n          onChangeText={(text) => this.setState({specialInstructions: text})}\n          errorMessage='Do not leave this field empty!'\n          checkInput={() => true /*this field is optional, so automatically valid*/}\n        />\n\n        {this.state.storageCardIsVisible ? (\n          <>\n            <View style={{padding: 15, marginTop: 15}}>\n              <Text style={{fontSize: 15, color: 'white', marginBottom: 15, textAlign: 'center'}}>Here's what we found based on your address above.</Text>\n              <View style={{height: 5}}>{/*for padding purposes*/}</View>\n              <FacilitySummaryCard\n                src={require('../photos/csimini.png')}\n                onPress={() => {this.setState({modalVisible:true, storageAddress: '855 Parr Boulevard, Richmond, CA 94801'})}}\n                address='855 Parr Boulevard, Richmond, CA 94801'\n              />\n            </View>\n          </>\n        ) : (\n          <>\n            <View>\n              <LongButton\n                title='Find a Unit!'\n                onPress={this.findUnit}\n              />\n            </View>\n          </>\n        )}\n\n        <FacilityModal\n          modalVisible={this.state.modalVisible}\n          src={require('../photos/csimini.png')}\n          onIconPress={this.closeModal}\n          facilityName='CSI Mini Storage'\n          facilityAddress={this.state.storageAddress}\n          facilityWebsite='csiministorage.com'\n          onSelectPaymentPlan={this.selectPaymentPlan}\n        />\n\n      </ScrollView>\n    );\n  }\n\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136',\n    padding: 25,\n  },\n  findFacilityText: {\n    flexDirection: 'row',\n    fontSize: 15,\n    justifyContent: 'center',\n    paddingTop: 5,\n    textAlign: 'center',\n    color: 'white',\n    marginBottom: 20,\n  },\n  unitSizeView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 25\n  },\n  unitColumnView: {\n    flexDirection: 'column'\n  },\n  openButton: {\n    backgroundColor: \"#7B1FA2\",\n    borderRadius: 5,\n    margin: 10,\n    padding: 10,\n    borderColor: '#FFF'\n  },\n  addressInput: {\n    backgroundColor: '#F5F5F5',\n    height: 40,\n    textAlign: 'center'\n  },\n  map: {\n    width: 150,\n    height: 150,\n    margin: 15,\n  },\n  selectFacilityModalView: {\n    backgroundColor: '#F5F5F5',\n    marginTop: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15,\n    borderRadius: 5,\n  },\n  descriptionText:{\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white',\n  },\n  modalView:{\n    flex: 1,\n    marginTop: 120,\n    marginBottom: 50,\n    marginLeft: 25,\n    marginRight: 25,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    justifyContent: 'flex-start',\n    overflow: \"hidden\",\n  },\n  close: {\n    margin: 5,\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    width: 25,\n    height: 25,\n    color: \"#FFF\"\n  },\n  sectionHeader: {\n    color: '#FFF',\n    fontSize: 25,\n  },\n});\n\n\n/*\n        <Modal visible={this.state.modalVisible} transparent={true}>\n            <View style = {styles.modalView}>\n              <View style={{flex:1, alignItems: 'center'}}>\n                <Image resizeMode={'contain'} source={require('../photos/csimini.png')} style={{flex:1}}/>\n              </View>\n              <Ionicons style={styles.close} name=\"ios-close-circle\" size={25} onPress={() => {this.setState({modalVisible:false})}}/>\n              <View style={{flex:2, margin: 10}}>\n                <Text style={{fontSize: 30, marginLeft: 10}}>CSI Mini Storage</Text>\n                <Text style={{marginLeft: 10}}>{this.state.storageAddress}</Text>\n                <Text style={{marginLeft: 10}}>csiministorage.com</Text>\n                <Text style={{fontSize: 15, marginTop: 10, marginLeft: 10}}>Options Available</Text>\n                <ScrollView>\n                <TouchableOpacity style={styles.openButton}\n                                  onPress={() => {this.props.navigation.navigate('AccountInfoScreen',\n                                    {addressLine1: this.state.addressLine1, addressLine2: this.state.addressLine2,\n                                     city: this.state.city, state: this.state.state, zip: this.state.zip,\n                                     specialInstructions: this.state.specialInstructions, size: 'By Item'}); this.setState({modalVisible:false});\n                                   }}>\n                <View style= {{flexDirection: 'row', justifyContent: 'space-between'}}>\n                  <Text style={styles.sectionHeader}>Pay By Bin</Text>\n                  <Text style={styles.sectionHeader}>$7/month</Text>\n                </View>\n                <Text style={{color: '#AAB5E0'}}>60x40x31.5cm</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.openButton}\n                                  onPress={() => {this.props.navigation.navigate('AccountInfoScreen',\n                                    {addressLine1: this.state.addressLine1, addressLine2: this.state.addressLine2,\n                                     city: this.state.city, state: this.state.state, zip: this.state.zip,\n                                     specialInstructions: this.state.specialInstructions, size: '2x2'}); this.setState({modalVisible:false});\n                                   }}>\n                <View style= {{flexDirection: 'row', justifyContent: 'space-between'}}>\n                  <Text style={styles.sectionHeader}>2'x2' </Text>\n                  <Text style={styles.sectionHeader}>$79/month</Text>\n                </View>\n                <Text style={{color: '#AAB5E0'}}>16 cubic ft - Hall Closet</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.openButton}\n                                  onPress={() => {this.props.navigation.navigate('AccountInfoScreen',\n                                    {addressLine1: this.state.addressLine1, addressLine2: this.state.addressLine2,\n                                     city: this.state.city, state: this.state.state, zip: this.state.zip,\n                                     specialInstructions: this.state.specialInstructions, size: '2x4'}); this.setState({modalVisible:false});\n                                   }}>\n                <View style= {{flexDirection: 'row', justifyContent: 'space-between'}}>\n                  <Text style={styles.sectionHeader}>2'x4'</Text>\n                  <Text style={styles.sectionHeader}>$99/month</Text>\n                </View>\n                <Text style={{color: '#AAB5E0'}}>32 cubic feet - Bedroom Closet</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.openButton}\n                                  onPress={() => {this.props.navigation.navigate('AccountInfoScreen',\n                                    {addressLine1: this.state.addressLine1, addressLine2: this.state.addressLine2,\n                                     city: this.state.city, state: this.state.state, zip: this.state.zip,\n                                     specialInstructions: this.state.specialInstructions, size: '5x5'}); this.setState({modalVisible:false});\n                                   }}>\n                <View style= {{flexDirection: 'row', justifyContent: 'space-between'}}>\n                  <Text style={styles.sectionHeader}>5'x5'</Text>\n                  <Text style={styles.sectionHeader}>$134/month</Text>\n                </View>\n                <Text style={{color: '#AAB5E0'}}>100 cubic feet - Walk-in Closet</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.openButton}\n                                  onPress={() => {this.props.navigation.navigate('AccountInfoScreen',\n                                    {addressLine1: this.state.addressLine1, addressLine2: this.state.addressLine2,\n                                     city: this.state.city, state: this.state.state, zip: this.state.zip,\n                                     specialInstructions: this.state.specialInstructions, size: '5x10'}); this.setState({modalVisible:false});\n                                   }}>\n                <View style= {{flexDirection: 'row', justifyContent: 'space-between'}}>\n                  <Text style={styles.sectionHeader}>5'x10'</Text>\n                  <Text style={styles.sectionHeader}>$157/month</Text>\n                </View>\n                <Text style={{color: '#AAB5E0'}}>200 cubic feet - Studio Apt.</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.openButton}\n                                  onPress={() => {this.props.navigation.navigate('AccountInfoScreen',\n                                    {addressLine1: this.state.addressLine1, addressLine2: this.state.addressLine2,\n                                     city: this.state.city, state: this.state.state, zip: this.state.zip,\n                                     specialInstructions: this.state.specialInstructions, size: '5x15'}); this.setState({modalVisible:false});\n                                   }}>\n                <View style= {{flexDirection: 'row', justifyContent: 'space-between'}}>\n                  <Text style={styles.sectionHeader}>5'x15'</Text>\n                  <Text style={styles.sectionHeader}>$191/month</Text>\n                </View>\n                <Text style={{color: '#AAB5E0'}}>300 cubic feet - Small 1BR Apt.</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.openButton}\n                                  onPress={() => {this.props.navigation.navigate('AccountInfoScreen',\n                                    {addressLine1: this.state.addressLine1, addressLine2: this.state.addressLine2,\n                                     city: this.state.city, state: this.state.state, zip: this.state.zip,\n                                     specialInstructions: this.state.specialInstructions, size: '10x10'}); this.setState({modalVisible:false});\n                                   }}>\n                <View style= {{flexDirection: 'row', justifyContent: 'space-between'}}>\n                  <Text style={styles.sectionHeader}>10'x10'</Text>\n                  <Text style={styles.sectionHeader}>$236/month</Text>\n                </View>\n                <Text style={{color: '#AAB5E0'}}>400 cubic feet - 1BR Apt.</Text>\n                </TouchableOpacity>\n                </ScrollView>\n              </View>\n            </View>\n        </Modal>\n        */\n"]},"metadata":{},"sourceType":"module"}