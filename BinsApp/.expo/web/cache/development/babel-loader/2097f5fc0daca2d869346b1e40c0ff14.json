{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\UserInfo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport FormInputHandler from \"../components/FormInputHandler.js\";\nimport LongButton from \"../components/LongButton.js\";\nimport { LoginContext } from \"../components/LoginProvider.js\";\nimport { Url } from \"../src/components/url.js\";\n\nvar UserInfo = function (_React$Component) {\n  _inherits(UserInfo, _React$Component);\n\n  var _super = _createSuper(UserInfo);\n\n  function UserInfo(props) {\n    var _this;\n\n    _classCallCheck(this, UserInfo);\n\n    _this = _super.call(this, props);\n\n    _this.checkAllFields = function () {\n      if (_this.state.validEmail && _this.state.validPassword && _this.state.validPhone && _this.state.nonemptyName && _this.state.validPasswordReentry) {\n        _this.setState({\n          validInput: true\n        });\n      } else {\n        _this.setState({\n          validInput: false\n        });\n      }\n    };\n\n    _this.checkPasswordReentry = function () {\n      if (_this.state.password != _this.state.passwordReentry) {\n        _this.setState({\n          validPasswordReentry: false\n        });\n      }\n    };\n\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      passwordReentry: '',\n      phone: '',\n      address: '',\n      specialInstructions: '',\n      size: '',\n      validInput: false,\n      validEmail: false,\n      validPassword: false,\n      validPhone: false,\n      nonemptyName: false,\n      validNameUI: true,\n      validPhoneUI: true,\n      validEmailUI: true,\n      validPasswordUI: true,\n      validPasswordReentry: true\n    };\n    return _this;\n  }\n\n  _createClass(UserInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var wholeAddress = this.props.route.params.addressLine1 + ' ' + this.props.route.params.addressLine2 + ' ' + this.props.route.params.city + ', ' + this.props.route.params.state + ' ' + this.props.route.params.zip;\n      var specialInstructions = this.props.route.params.specialInstructions;\n      var size = this.props.route.params.size;\n      this.setState({\n        address: wholeAddress\n      });\n      this.setState({\n        specialInstructions: specialInstructions\n      });\n      this.setState({\n        size: size\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      fetch(Url + '/customers', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.descriptionText), {}, {\n          color: this.state.validNameUI ? 'white' : 'red'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, \"Full Name \", this.state.validNameUI ? '' : ' - Don\\'t leave this empty!'), React.createElement(FormInputHandler, {\n        defaultText: \"Enter your full name here\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        autoCapitalize: \"words\",\n        onChangeText: function onChangeText(val) {\n          return _this2.setState({\n            name: val,\n            validInput: false\n          });\n        },\n        onEndEditing: function onEndEditing(val) {\n          if (_this2.state.name.length == 0) {\n            _this2.setState({\n              validNameUI: false,\n              nonemptyName: false\n            });\n          } else {\n            _this2.setState({\n              nonemptyName: true,\n              validNameUI: true\n            });\n          }\n\n          _this2.checkAllFields();\n        },\n        onBlur: function onBlur() {\n          return _this2.checkAllFields();\n        },\n        returnKeyType: \"next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.descriptionText), {}, {\n          color: this.state.validPhoneUI ? 'white' : 'red'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, \"Phone \", this.state.validPhoneUI ? '' : ' - Must be 10 digits!'), React.createElement(FormInputHandler, {\n        defaultText: \"Enter your phone number here\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        onChangeText: function onChangeText(val) {\n          return _this2.setState({\n            phone: val,\n            validInput: false\n          });\n        },\n        keyboardType: \"number-pad\",\n        onEndEditing: function onEndEditing(val) {\n          if (_this2.state.phone.length == 10) {\n            _this2.setState({\n              validPhone: true,\n              validPhoneUI: true\n            });\n          } else {\n            _this2.setState({\n              validPhone: false,\n              validPhoneUI: false\n            });\n          }\n\n          _this2.checkAllFields();\n        },\n        onBlur: function onBlur() {\n          return _this2.checkAllFields();\n        },\n        returnKeyType: \"next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.descriptionText), {}, {\n          color: this.state.validEmailUI ? 'white' : 'red'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, \"Email \", this.state.validEmailUI ? '' : '- Invalid Email!'), React.createElement(FormInputHandler, {\n        defaultText: \"Enter your email here\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        onChangeText: function onChangeText(val) {\n          return _this2.setState({\n            email: val,\n            validInput: false\n          });\n        },\n        keyboardType: \"email-address\",\n        onEndEditing: function onEndEditing(prev) {\n          var emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n          if (emailRegex.test(_this2.state.email.toLowerCase())) {\n            _this2.setState({\n              validEmail: true,\n              validEmailUI: true\n            });\n          } else {\n            _this2.setState({\n              validEmail: false,\n              validEmailUI: false\n            });\n          }\n\n          _this2.checkAllFields();\n        },\n        onBlur: function onBlur() {\n          return _this2.checkAllFields();\n        },\n        returnKeyType: \"next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.descriptionText), {}, {\n          color: this.state.validPasswordUI ? 'white' : 'red'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, \"Password \", this.state.validPasswordUI ? '' : ' - Must be 8 characters and contain a number!'), React.createElement(FormInputHandler, {\n        defaultText: \"Enter a password here\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        onChangeText: function onChangeText(val) {\n          return _this2.setState({\n            password: val,\n            validInput: false\n          });\n        },\n        secureTextEntry: true,\n        onEndEditing: function onEndEditing(val) {\n          var hasNumberRegex = /\\d/;\n\n          if (_this2.state.password.length >= 8 && hasNumberRegex.test(_this2.state.password)) {\n            _this2.setState({\n              validPassword: true,\n              validPasswordUI: true\n            });\n          } else {\n            _this2.setState({\n              validPassword: false,\n              validPasswordUI: false\n            });\n          }\n\n          _this2.checkPasswordReentry();\n\n          _this2.checkAllFields();\n        },\n        onBlur: function onBlur() {\n          _this2.checkPasswordReentry();\n\n          _this2.checkAllFields();\n        },\n        returnKeyType: \"next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.descriptionText), {}, {\n          color: this.state.validPasswordReentry ? 'white' : 'red'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }, \"Confirm Password \", this.state.validPasswordReentry ? '' : ' - Passwords do not match!'), React.createElement(FormInputHandler, {\n        defaultText: \"Confirm your password here\",\n        defaultTextColor: \"#8B8B8B\",\n        style: styles.userInfoText,\n        onChangeText: function onChangeText(val) {\n          return _this2.setState({\n            passwordReentry: val,\n            validInput: false\n          });\n        },\n        secureTextEntry: true,\n        onEndEditing: function onEndEditing(val) {\n          if (_this2.state.passwordReentry != _this2.state.password) {\n            _this2.setState({\n              validPasswordReentry: false\n            });\n          } else {\n            _this2.setState({\n              validPasswordReentry: true\n            });\n          }\n\n          _this2.checkPasswordReentry();\n\n          _this2.checkAllFields();\n        },\n        onBlur: function onBlur() {\n          _this2.checkPasswordReentry();\n\n          _this2.checkAllFields();\n        },\n        returnKeyType: \"next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }), this.state.validInput ? React.createElement(React.Fragment, null, React.createElement(LongButton, {\n        title: \"NEXT\",\n        onPress: function onPress() {\n          _this2.context.signup(_this2.state.email, _this2.state.password, _this2.state.name, '+1' + _this2.state.phone, _this2.state.address, _this2.props.route.params.specialInstructions, _this2.state.size).then(function () {\n            _this2.onSubmit();\n\n            _this2.props.navigation.navigate('ConfirmContactInfo', {\n              email: _this2.state.email,\n              password: _this2.state.password\n            });\n          }).catch(function (err) {\n            console.log('error signing up - see below', JSON.stringify(err));\n\n            if (err.code == 'UsernameExistsException') {\n              Alert.alert('The email you\\'ve entered is already in use. Please choose another.');\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }\n      })) : React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.finishUserEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.finishUserEntryPrompt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }\n      }, \"Fill out your information before you move on.\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.validInputInstructions), {}, {\n          color: this.state.validPhone ? '#3DED97' : 'red'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      }, \"Your phone number must be 10 digits. Please do not include the country code.\"), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.validInputInstructions), {}, {\n          color: this.state.validPassword ? '#3DED97' : 'red'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }, \"Your password must be at least 8 characters and include a number.\"))));\n    }\n  }]);\n\n  return UserInfo;\n}(React.Component);\n\nUserInfo.contextType = LoginContext;\nexport { UserInfo as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 25,\n    backgroundColor: '#261136'\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15,\n    borderRadius: 5\n  },\n  descriptionText: {\n    marginBottom: -10,\n    paddingLeft: 15,\n    color: 'white'\n  },\n  finishUserEntry: {\n    padding: 10,\n    margin: 15,\n    backgroundColor: '#7B1FA2',\n    opacity: 0.3\n  },\n  finishUserEntryPrompt: {\n    textAlign: 'center',\n    color: 'white',\n    opacity: 1.0\n  },\n  validInputInstructions: {\n    fontSize: 15,\n    marginTop: 13,\n    paddingLeft: 15,\n    marginTop: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/UserInfo.js"],"names":["React","FormInputHandler","LongButton","LoginContext","Url","UserInfo","props","checkAllFields","state","validEmail","validPassword","validPhone","nonemptyName","validPasswordReentry","setState","validInput","checkPasswordReentry","password","passwordReentry","name","email","phone","address","specialInstructions","size","validNameUI","validPhoneUI","validEmailUI","validPasswordUI","wholeAddress","route","params","addressLine1","addressLine2","city","zip","fetch","method","headers","Accept","body","JSON","stringify","styles","container","descriptionText","color","userInfoText","val","length","prev","emailRegex","test","toLowerCase","hasNumberRegex","context","signup","then","onSubmit","navigation","navigate","catch","err","console","log","code","Alert","alert","finishUserEntry","finishUserEntryPrompt","validInputInstructions","Component","contextType","StyleSheet","create","flex","padding","backgroundColor","borderColor","borderWidth","textAlign","margin","borderRadius","marginBottom","paddingLeft","opacity","fontSize","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, Alert, KeyboardAvoidingView } from 'react-native';\nimport FormInputHandler from '../components/FormInputHandler.js'\nimport LongButton from '../components/LongButton.js'\nimport { LoginContext } from '../components/LoginProvider.js';\nimport {Url} from '../src/components/url.js';\n\nexport default class UserInfo extends React.Component {\n  static contextType = LoginContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      passwordReentry: '',\n      phone: '',\n      address: '',\n      specialInstructions: '',\n      size: '',\n      validInput: false,\n      validEmail: false,\n      validPassword: false,\n      validPhone: false,\n      nonemptyName: false,\n      // these are for rendering a red box on invalid input\n      validNameUI: true,\n      validPhoneUI: true,\n      validEmailUI: true,\n      validPasswordUI: true,\n      validPasswordReentry: true,\n    };\n  }\n\n  checkAllFields = () => {\n    if (this.state.validEmail && this.state.validPassword && this.state.validPhone && this.state.nonemptyName && this.state.validPasswordReentry) {\n      this.setState({validInput: true});\n    } else {\n      this.setState({validInput: false})\n    }\n  }\n\n  checkPasswordReentry = () => {\n    if (this.state.password != this.state.passwordReentry) {\n      this.setState({validPasswordReentry: false})\n    }\n  }\n\n  componentDidMount() {\n    const wholeAddress = this.props.route.params.addressLine1 + ' ' + this.props.route.params.addressLine2 + ' ' +\n                         this.props.route.params.city + ', ' + this.props.route.params.state + ' ' + this.props.route.params.zip;\n    const specialInstructions = this.props.route.params.specialInstructions;\n    const size = this.props.route.params.size;\n    this.setState({address: wholeAddress});\n    this.setState({specialInstructions: specialInstructions});\n    this.setState({size: size});\n  }\n\n  onSubmit() {\n    fetch(Url+'/customers',{\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n    },\n      body: JSON.stringify(this.state)\n    })\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style ={{...styles.descriptionText, color: this.state.validNameUI ? 'white' : 'red'}}>Full Name {this.state.validNameUI ? '' : ' - Don\\'t leave this empty!'}</Text>\n        <FormInputHandler\n          defaultText='Enter your full name here'\n          defaultTextColor='#8B8B8B'\n          style={styles.userInfoText}\n          autoCapitalize='words'\n          onChangeText={(val)=>this.setState({name: val, validInput: false})}\n          onEndEditing={(val) => {\n            if (this.state.name.length == 0) {\n              this.setState({validNameUI: false, nonemptyName: false})\n            } else {\n              this.setState({nonemptyName: true, validNameUI: true})\n            }\n            this.checkAllFields();\n          }}\n          onBlur={() => this.checkAllFields()}\n          returnKeyType='next'\n        />\n        <Text style ={{...styles.descriptionText, color: this.state.validPhoneUI ? 'white' : 'red'}}>Phone {this.state.validPhoneUI ? '' : ' - Must be 10 digits!'}</Text>\n        <FormInputHandler\n          defaultText='Enter your phone number here'\n          defaultTextColor='#8B8B8B'\n          style={styles.userInfoText}\n          onChangeText={(val)=>this.setState({phone: val, validInput: false})}\n          keyboardType='number-pad'\n          onEndEditing={(val) => {\n            if (this.state.phone.length == 10) {\n              this.setState({validPhone: true, validPhoneUI: true})\n            } else {\n              this.setState({validPhone: false, validPhoneUI: false})\n            }\n            this.checkAllFields();\n          }}\n          onBlur={() => this.checkAllFields()}\n          returnKeyType='next'\n        />\n        <Text style ={{...styles.descriptionText, color: this.state.validEmailUI ? 'white' : 'red'}}>Email {this.state.validEmailUI ? '' : '- Invalid Email!'}</Text>\n        <FormInputHandler\n          defaultText='Enter your email here'\n          defaultTextColor='#8B8B8B'\n          style={styles.userInfoText}\n          onChangeText={(val)=>this.setState({email: val, validInput: false})}\n          keyboardType='email-address'\n          onEndEditing={(prev) => {\n            // i got this regex online so we should test it (but it had the most upvotes on stack overflow lol)\n            const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            if (emailRegex.test(this.state.email.toLowerCase())) {\n              this.setState({validEmail: true, validEmailUI: true})\n            } else {\n              this.setState({validEmail: false, validEmailUI: false})\n            }\n            this.checkAllFields();\n          }}\n          onBlur={() => this.checkAllFields()}\n          returnKeyType='next'\n        />\n        <Text style ={{...styles.descriptionText, color: this.state.validPasswordUI ? 'white' : 'red'}}>Password {this.state.validPasswordUI ? '' : ' - Must be 8 characters and contain a number!'}</Text>\n        <FormInputHandler\n          defaultText='Enter a password here'\n          defaultTextColor='#8B8B8B'\n          style={styles.userInfoText}\n          onChangeText={(val)=>this.setState({password: val, validInput: false})}\n          secureTextEntry\n          onEndEditing={(val) => {\n            // regex to check if password has number\n            const hasNumberRegex = /\\d/;\n            if (this.state.password.length >= 8 && hasNumberRegex.test(this.state.password)) {\n              this.setState({validPassword: true, validPasswordUI: true})\n            } else {\n              this.setState({validPassword: false, validPasswordUI: false})\n            }\n            this.checkPasswordReentry();\n            this.checkAllFields();\n          }}\n          onBlur={() => {\n            this.checkPasswordReentry();\n            this.checkAllFields();\n          }}\n          returnKeyType='next'\n        />\n        <Text style ={{...styles.descriptionText, color: this.state.validPasswordReentry ? 'white' : 'red'}}>Confirm Password {this.state.validPasswordReentry ? '' : ' - Passwords do not match!'}</Text>\n        <FormInputHandler\n          defaultText='Confirm your password here'\n          defaultTextColor='#8B8B8B'\n          style={styles.userInfoText}\n          onChangeText={(val)=>this.setState({passwordReentry: val, validInput: false})}\n          secureTextEntry\n          onEndEditing={(val) => {\n            if (this.state.passwordReentry != this.state.password) {\n              this.setState({validPasswordReentry: false})\n            } else {\n              this.setState({validPasswordReentry: true})\n            }\n            this.checkPasswordReentry();\n            this.checkAllFields();\n          }}\n          onBlur={() => {\n            this.checkPasswordReentry();\n            this.checkAllFields()\n          }}\n          returnKeyType='next'\n        />\n        {this.state.validInput ? (\n          <>\n            <LongButton\n              title=\"NEXT\"\n              onPress={()=>{\n                this.context.signup(this.state.email, this.state.password, this.state.name, '+1' + this.state.phone, this.state.address, this.props.route.params.specialInstructions, this.state.size)\n                .then(() => {this.onSubmit(); this.props.navigation.navigate('ConfirmContactInfo', {email: this.state.email, password: this.state.password})})\n                .catch((err) => {\n                  console.log('error signing up - see below', JSON.stringify(err));\n                  if (err.code == 'UsernameExistsException') {\n                    Alert.alert('The email you\\'ve entered is already in use. Please choose another.');\n                  }\n                })\n              }}\n            />\n          </>\n        ) : (\n          <>\n            <View style={styles.finishUserEntry}>\n              <Text style={styles.finishUserEntryPrompt}>Fill out your information before you move on.</Text>\n            </View>\n            <View>\n              <Text style={{...styles.validInputInstructions, color: this.state.validPhone ? '#3DED97' : 'red'}}>\n                Your phone number must be 10 digits. Please do not include the country code.\n              </Text>\n              <Text style={{...styles.validInputInstructions, color: this.state.validPassword ? '#3DED97' : 'red'}}>\n                Your password must be at least 8 characters and include a number.\n              </Text>\n            </View>\n          </>\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 25,\n    backgroundColor: '#261136',\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15,\n    borderRadius: 5,\n  },\n  descriptionText:{\n    marginBottom: -10,\n    paddingLeft: 15,\n    color: 'white',\n  },\n  finishUserEntry: {\n    padding: 10,\n    margin: 15,\n    backgroundColor: '#7B1FA2',\n    opacity: 0.3\n  },\n  finishUserEntryPrompt: {\n    textAlign: 'center',\n    color: 'white',\n    opacity: 1.0, // this won't overide the wrapper view's opacity :(\n  },\n  validInputInstructions: {\n    fontSize: 15,\n    marginTop: 13,\n    paddingLeft: 15,\n    marginTop: 30\n  }\n});\n"]},"metadata":{},"sourceType":"module"}