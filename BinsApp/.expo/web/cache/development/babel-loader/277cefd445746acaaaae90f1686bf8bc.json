{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\screens\\\\BillingInfo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FormInputHandler from \"../components/FormInputHandler.js\";\nimport Textbox from \"../components/Textbox.js\";\nimport LongButton from \"../components/LongButton.js\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Auth } from 'aws-amplify';\nimport { Url } from \"../src/components/url.js\";\nimport moment from \"moment\";\nimport { LoginContext } from \"../components/LoginProvider.js\";\n\nvar BillingInfo = function (_React$Component) {\n  _inherits(BillingInfo, _React$Component);\n\n  var _super = _createSuper(BillingInfo);\n\n  function BillingInfo(props) {\n    var _this;\n\n    _classCallCheck(this, BillingInfo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      dateSelected: '',\n      timeSelected: '',\n      address: '',\n      email: '',\n      phone: '',\n      type: 'Pickup',\n      selected: 'Initial Pickup',\n      nameOnCard: '',\n      creditCardNum: '',\n      expirationDate: '',\n      securityCode: '',\n      size: ''\n    };\n    return _this;\n  }\n\n  _createClass(BillingInfo, [{\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      fetch(Url + '/orders', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$route$par,\n          _this$props$route$par2,\n          _this$props$route$par3,\n          _this$props$route$par4,\n          _this2 = this;\n\n      var dateSelected = (_this$props$route$par = (_this$props$route$par2 = this.props.route.params) == null ? void 0 : _this$props$route$par2.dateSelected) != null ? _this$props$route$par : '';\n      var timeSelected = (_this$props$route$par3 = (_this$props$route$par4 = this.props.route.params) == null ? void 0 : _this$props$route$par4.timeSelected) != null ? _this$props$route$par3 : '';\n      this.setState({\n        dateSelected: dateSelected,\n        timeSelected: timeSelected\n      });\n      Auth.currentUserInfo().then(function (userInfo) {\n        var _userInfo$attributes = userInfo.attributes,\n            attributes = _userInfo$attributes === void 0 ? {} : _userInfo$attributes;\n\n        _this2.setState({\n          address: attributes['address']\n        });\n\n        _this2.setState({\n          email: attributes['email']\n        });\n\n        _this2.setState({\n          phone: attributes['phone_number']\n        });\n\n        _this2.setState({\n          size: attributes['custom:size']\n        });\n\n        console.log(_this2.state);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, React.createElement(Textbox, {\n        header: \"Date\",\n        body: moment(this.state.dateSelected).format('MMMM DD, YYYY'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }), React.createElement(Textbox, {\n        header: \"Time\",\n        body: this.state.timeSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }), React.createElement(Textbox, {\n        header: \"Address\",\n        body: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), React.createElement(Textbox, {\n        header: \"Option\",\n        body: this.state.size,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          padding: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, React.createElement(LongButton, {\n        title: \"CONFIRM INITIAL APPOINTMENT\",\n        onPress: function onPress() {\n          _this3.onSubmit();\n\n          _this3.props.navigation.navigate('InitialConfirmationScreen', {\n            dateSelected: _this3.state.dateSelected,\n            timeSelected: _this3.state.timeSelected,\n            address: _this3.state.address,\n            type: _this3.state.type\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return BillingInfo;\n}(React.Component);\n\nBillingInfo.contextType = LoginContext;\nexport { BillingInfo as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136'\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15\n  },\n  descriptionText: {\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white'\n  },\n  questionText: {\n    fontSize: 20,\n    paddingTop: 15\n  },\n  header: {\n    color: '#AAB5E0',\n    fontSize: 25,\n    margin: 15,\n    justifyContent: 'center'\n  },\n  creditCardLabels: {\n    color: 'white'\n  },\n  creditCardInputView: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    margin: 15,\n    paddingLeft: 5,\n    paddingTop: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/screens/BillingInfo.js"],"names":["React","FormInputHandler","Textbox","LongButton","ScrollView","Auth","Url","moment","LoginContext","BillingInfo","props","state","dateSelected","timeSelected","address","email","phone","type","selected","nameOnCard","creditCardNum","expirationDate","securityCode","size","fetch","method","headers","Accept","body","JSON","stringify","route","params","setState","currentUserInfo","then","userInfo","attributes","console","log","styles","container","format","padding","onSubmit","navigation","navigate","Component","contextType","StyleSheet","create","flex","backgroundColor","userInfoText","borderColor","borderWidth","textAlign","color","margin","descriptionText","marginBottom","marginLeft","questionText","fontSize","paddingTop","header","justifyContent","creditCardLabels","creditCardInputView","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, Alert } from 'react-native';\nimport FormInputHandler from '../components/FormInputHandler.js'\nimport Textbox from '../components/Textbox.js'\nimport LongButton from '../components/LongButton.js'\n//import { CreditCardInput } from 'react-native-credit-card-input'\nimport { ScrollView } from 'react-native-gesture-handler';\nimport {Auth} from 'aws-amplify';\nimport {Url} from '../src/components/url.js';\nimport moment from \"moment\";\n\nimport { LoginContext } from '../components/LoginProvider.js';\n\nexport default class BillingInfo extends React.Component {\n  static contextType = LoginContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateSelected: '',\n      timeSelected: '',\n      address: '',\n      email: '',\n      phone: '',\n      type: 'Pickup',\n      selected: 'Initial Pickup',\n      nameOnCard: '',\n      creditCardNum: '',\n      expirationDate: '',\n      securityCode: '',\n      size: '',\n    }\n  }\n\n  onSubmit() {\n    fetch(Url+'/orders',{\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n    },\n      body: JSON.stringify(this.state)\n  })\n}\n\n  componentDidMount(){\n      const dateSelected = this.props.route.params?.dateSelected??'';\n      const timeSelected = this.props.route.params?.timeSelected??'';\n      this.setState({dateSelected: dateSelected, timeSelected: timeSelected});\n      Auth.currentUserInfo().then((userInfo) => {\n        const { attributes = {} } = userInfo;\n        this.setState({address:attributes['address']});\n        this.setState({email:attributes['email']});\n        this.setState({phone:attributes['phone_number']});\n        this.setState({size:attributes['custom:size']});\n        console.log(this.state);\n      })\n    }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Textbox header='Date'\n                 body={moment(this.state.dateSelected).format('MMMM DD, YYYY')}/>\n        <Textbox header='Time'\n                 body={this.state.timeSelected}/>\n        <Textbox header='Address'\n                 body={this.state.address}/>\n        <Textbox header='Option'\n                 body={this.state.size}/>\n        <View style = {{padding: 25}}>\n          <LongButton\n            title=\"CONFIRM INITIAL APPOINTMENT\"\n            onPress={()=>{\n              this.onSubmit();\n              this.props.navigation.navigate('InitialConfirmationScreen', {dateSelected: this.state.dateSelected,\n                                                                    timeSelected: this.state.timeSelected,\n                                                                    address: this.state.address,\n                                                                    type: this.state.type})\n              }}/>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#261136',\n  },\n  userInfoText: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    textAlign: 'center',\n    color: 'white',\n    margin: 15,\n    padding: 15,\n  },\n  descriptionText:{\n    marginBottom: -10,\n    marginLeft: 15,\n    color: 'white',\n  },\n  questionText: {\n    fontSize: 20,\n    paddingTop: 15\n  },\n  header: {\n    color: '#AAB5E0',\n    fontSize: 25,\n    margin: 15,\n    justifyContent: 'center',\n  },\n  creditCardLabels: {\n    color: 'white',\n  },\n  creditCardInputView: {\n    borderColor: '#4826A0',\n    borderWidth: 1,\n    margin: 15,\n    paddingLeft: 5,\n    paddingTop: 5\n  }\n\n});\n\n//Credit Card Input\n/*\n<CreditCardInput\n  onChange={this._onChange}\n  labelStyle={styles.creditCardLabels}\n  inputContainerStyle={styles.creditCardInputView}\n  inputStyle={{color: 'white'}}\n  requiresName={true}\n  autoFocus={false}\n/>\n*/\n"]},"metadata":{},"sourceType":"module"}