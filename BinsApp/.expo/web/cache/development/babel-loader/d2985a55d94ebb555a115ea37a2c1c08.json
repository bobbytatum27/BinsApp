{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\azhan\\\\desktop\\\\binsapp\\\\binsapp\\\\components\\\\HomeTab.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport HomeStackScreen from \"./HomeTabStacks/HomeStackScreen.js\";\nimport MenuStackScreen from \"./HomeTabStacks/MenuStackScreen.js\";\nimport OrderStackScreen from \"./HomeTabStacks/OrderStackScreen.js\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nvar HomeTab = function (_React$Component) {\n  _inherits(HomeTab, _React$Component);\n\n  var _super = _createSuper(HomeTab);\n\n  function HomeTab() {\n    var _this;\n\n    _classCallCheck(this, HomeTab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.tabImage = function (_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = 'ios-home';\n          } else if (route.name === 'Menu') {\n            iconName = 'ios-list';\n          } else if (route.name === 'Orders') {\n            iconName = 'ios-clipboard';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: 22,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(HomeTab, [{\n    key: \"render\",\n    value: function render() {\n      var Tab = createBottomTabNavigator();\n      var tabBarOpts = {\n        activeTintColor: 'white',\n        inactiveTintColor: 'gray',\n        style: {\n          backgroundColor: '#7B1FA2'\n        },\n        showLabel: false\n      };\n      return React.createElement(Tab.Navigator, {\n        screenOptions: this.tabImage,\n        tabBarOptions: tabBarOpts,\n        initialRouteName: \"Home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Orders\",\n        component: OrderStackScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Home\",\n        component: HomeStackScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Menu\",\n        component: MenuStackScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return HomeTab;\n}(React.Component);\n\nexport { HomeTab as default };","map":{"version":3,"sources":["C:/Users/azhan/desktop/binsapp/binsapp/components/HomeTab.js"],"names":["React","Ionicons","HomeStackScreen","MenuStackScreen","OrderStackScreen","createBottomTabNavigator","HomeTab","tabImage","route","tabBarIcon","color","iconName","name","Tab","tabBarOpts","activeTintColor","inactiveTintColor","style","backgroundColor","showLabel","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAGA,OAAOC,eAAP;AACA,OAAOC,eAAP;AACA,OAAOC,gBAAP;AAEA,SAASC,wBAAT,QAAyC,+BAAzC;;IAKqBC,O;;;;;;;;;;;;;;;;UASjBC,Q,GAAW;AAAA,UAAEC,KAAF,QAAEA,KAAF;AAAA,aAAc;AACrBC,QAAAA,UAAU,EAAE,2BAAa;AAAA,cAAXC,KAAW,SAAXA,KAAW;AACrB,cAAIC,QAAJ;;AAEA,cAAIH,KAAK,CAACI,IAAN,KAAe,MAAnB,EAA2B;AACzBD,YAAAA,QAAQ,GAAG,UAAX;AACD,WAFD,MAEO,IAAIH,KAAK,CAACI,IAAN,KAAe,MAAnB,EAA2B;AAChCD,YAAAA,QAAQ,GAAG,UAAX;AACD,WAFM,MAEA,IAAIH,KAAK,CAACI,IAAN,KAAe,QAAnB,EAA6B;AAClCD,YAAAA,QAAQ,GAAG,eAAX;AACD;;AAED,iBAAO,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEA,QAAhB;AAA0B,YAAA,IAAI,EAAE,EAAhC;AAAoC,YAAA,KAAK,EAAED,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AAbkB,OAAd;AAAA,K;;;;;;;6BAgBF;AACL,UAAMG,GAAG,GAAGR,wBAAwB,EAApC;AAGA,UAAMS,UAAU,GAAG;AACfC,QAAAA,eAAe,EAAE,OADF;AAEfC,QAAAA,iBAAiB,EAAE,MAFJ;AAGfC,QAAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAHQ;AAIfC,QAAAA,SAAS,EAAE;AAJI,OAAnB;AAOA,aACI,oBAAC,GAAD,CAAK,SAAL;AACI,QAAA,aAAa,EAAE,KAAKZ,QADxB;AAEI,QAAA,aAAa,EAAEO,UAFnB;AAGI,QAAA,gBAAgB,EAAC,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,QAAjB;AAA0B,QAAA,SAAS,EAAEV,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAEF,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAEC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADJ;AAWH;;;;EA/CgCH,KAAK,CAACoB,S;;SAAtBd,O","sourcesContent":["import React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\n\n// The Stacks that that are the main component rendered for each tab\nimport HomeStackScreen from './HomeTabStacks/HomeStackScreen.js'\nimport MenuStackScreen from './HomeTabStacks/MenuStackScreen.js';\nimport OrderStackScreen from './HomeTabStacks/OrderStackScreen.js';\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\n/*\n * Contains the Tab Navigator rendered at the main Home Screen Section (Home, Orders, Menu)\n */\nexport default class HomeTab extends React.Component {\n\n    /*\n     * Determines the icon to put on the Tab Image by using the route name\n     * passed from the TabNavigator.\n     *\n     * @param {route} The route obj (destructured I think)\n     * @return An object called tabBarIcon which renders the appropriate Ionicon image\n     */\n    tabImage = ({route}) => ({\n        tabBarIcon: ({color}) => {\n            let iconName;\n\n            if (route.name === 'Home') {\n              iconName = 'ios-home';\n            } else if (route.name === 'Menu') {\n              iconName = 'ios-list';\n            } else if (route.name === 'Orders') {\n              iconName = 'ios-clipboard';\n            }\n\n            return <Ionicons name={iconName} size={22} color={color} />;\n          },\n    });\n\n    render() {\n        const Tab = createBottomTabNavigator();\n\n        // Tab Bar Config Options\n        const tabBarOpts = {\n            activeTintColor: 'white',\n            inactiveTintColor: 'gray',\n            style: {backgroundColor: '#7B1FA2'},\n            showLabel: false\n        }\n\n        return (\n            <Tab.Navigator\n                screenOptions={this.tabImage}\n                tabBarOptions={tabBarOpts}\n                initialRouteName='Home'\n            >\n                <Tab.Screen name=\"Orders\" component={OrderStackScreen}/>\n                <Tab.Screen name=\"Home\" component={HomeStackScreen}/>\n                <Tab.Screen name=\"Menu\" component={MenuStackScreen}/>\n            </Tab.Navigator>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}